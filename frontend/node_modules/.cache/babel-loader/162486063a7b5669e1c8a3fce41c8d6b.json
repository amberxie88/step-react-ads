{"ast":null,"code":"var _jsxFileName = \"/home/kjchan/step-react-ads/client/src/Dashboard/PageComponents/ReportsDashboard/Reports/ClicksPerCampaignChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport Title from '../../../Utilities/Title';\nexport default function ClicksPerCampaignChart() {\n  const theme = useTheme();\n  const [data, setData] = useState([]); //data for chart along with setter function\n\n  useEffect(() => {\n    //loads data asynchronously so page can load faster\n    (async function getData() {\n      const {\n        data\n      } = await axios.get('/data'); //fake data so there's some actual results\n      // only returns 1 campaign\n      // const response = await axios.post(\n      //   '/campaign',\n      //   new URLSearchParams({\n      //     query: `SELECT campaign.name, metrics.clicks FROM campaign ORDER BY campaign.id`,\n      //   }),\n      //   {\n      //     headers: {\n      //       'Content-Type': 'application/x-www-form-urlencoded',\n      //     },\n      //   },\n      // );\n\n      setData(data.response);\n    })();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Clicks Per Campaign\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: data,\n    margin: {\n      top: 16,\n      right: 16,\n      bottom: 0,\n      left: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"campaign.name\",\n    stroke: theme.palette.text.secondary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"metrics.clicks\",\n    fill: \"#8884d8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/kjchan/step-react-ads/client/src/Dashboard/PageComponents/ReportsDashboard/Reports/ClicksPerCampaignChart.js"],"names":["React","useState","useEffect","useTheme","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","axios","Title","ClicksPerCampaignChart","theme","data","setData","getData","get","response","top","right","bottom","left","palette","text","secondary"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SACEC,QADF,EAEEC,GAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,aALF,EAMEC,OANF,EAOEC,MAPF,EAQEC,mBARF,QASO,UATP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,eAAe,SAASC,sBAAT,GAAkC;AAC/C,QAAMC,KAAK,GAAGZ,QAAQ,EAAtB;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC,CAF+C,CAET;;AAEtCC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,KAAC,eAAegB,OAAf,GAAyB;AACxB,YAAM;AAAEF,QAAAA;AAAF,UAAW,MAAMJ,KAAK,CAACO,GAAN,CAAU,OAAV,CAAvB,CADwB,CACmB;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAF,MAAAA,OAAO,CAACD,IAAI,CAACI,QAAN,CAAP;AACD,KAjBD;AAkBD,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,MAAM,EAAE;AACNK,MAAAA,GAAG,EAAE,EADC;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,MAAM,EAAE,CAHF;AAINC,MAAAA,IAAI,EAAE;AAJA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,eADV;AAEE,IAAA,MAAM,EAAET,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmBC,SAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAcE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAeE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAgBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAiBE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,gBAAb;AAA8B,IAAA,IAAI,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CAFF,CADF;AA0BD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport axios from 'axios';\nimport Title from '../../../Utilities/Title';\n\nexport default function ClicksPerCampaignChart() {\n  const theme = useTheme();\n  const [data, setData] = useState([]); //data for chart along with setter function\n\n  useEffect(() => {\n    //loads data asynchronously so page can load faster\n    (async function getData() {\n      const { data } = await axios.get('/data'); //fake data so there's some actual results\n\n      // only returns 1 campaign\n      // const response = await axios.post(\n      //   '/campaign',\n      //   new URLSearchParams({\n      //     query: `SELECT campaign.name, metrics.clicks FROM campaign ORDER BY campaign.id`,\n      //   }),\n      //   {\n      //     headers: {\n      //       'Content-Type': 'application/x-www-form-urlencoded',\n      //     },\n      //   },\n      // );\n\n      setData(data.response);\n    })();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Title>Clicks Per Campaign</Title>\n      <ResponsiveContainer>\n        <BarChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis\n            dataKey=\"campaign.name\"\n            stroke={theme.palette.text.secondary}\n          />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"metrics.clicks\" fill=\"#8884d8\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}