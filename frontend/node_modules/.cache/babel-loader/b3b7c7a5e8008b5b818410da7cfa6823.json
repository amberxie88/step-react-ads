{"ast":null,"code":"var _jsxFileName = \"/home/kjchan/step-react-ads/client/src/Dashboard/PageComponents/LoginDashboard/Accounts.js\";\n\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport axios from 'axios';\nimport Title from '../../Utilities/Title';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass Accounts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchCustomers = this.fetchCustomers.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.isSelected = this.isSelected.bind(this);\n    this.state = {\n      customerIds: [],\n      selected: '',\n      status: 'none authenticated',\n      errorMessage: ''\n    };\n  }\n\n  async fetchCustomers() {\n    this.setState({\n      status: 'loading'\n    });\n\n    try {\n      const {\n        data\n      } = await axios.get('/customer');\n\n      if (data.meta.status !== '200') {\n        throw new Error(data.meta.message);\n      } else {\n        console.log(data.response);\n        this.setState({\n          customerIds: data.response,\n          status: 'loaded'\n        });\n      }\n    } catch (err) {\n      console.log(err.message);\n      this.setState({\n        status: 'none authenticated',\n        errorMessage: err.message\n      });\n    }\n  }\n\n  pickContentToDisplay() {\n    const customerIds = this.state.customerIds;\n    console.log(customerIds);\n\n    switch (this.state.status) {\n      case 'none authenticated':\n        return /*#__PURE__*/React.createElement(Typography, {\n          variant: \"overline\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }, \"Log in to access your accounts.\");\n\n      case 'error':\n        return /*#__PURE__*/React.createElement(Typography, {\n          variant: \"overline\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }\n        }, \"Something Went Wrong. Here's the Error Message: \" + this.state.errorMessage);\n\n      case 'loading':\n        return /*#__PURE__*/React.createElement(Typography, {\n          variant: \"overline\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 16\n          }\n        }, \"Loading . . .\");\n\n      case 'loaded':\n        return /*#__PURE__*/React.createElement(TableBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }\n        }, customerIds.map(row => /*#__PURE__*/React.createElement(TableRow, {\n          key: row.id,\n          onClick: event => this.handleClick(event, row),\n          role: \"checkbox\",\n          \"aria-checked\": this.isSelected(row.child),\n          tabIndex: -1,\n          selected: this.isSelected(row.child),\n          hover: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          padding: \"checkbox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          checked: this.isSelected(row.child),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }\n        })), /*#__PURE__*/React.createElement(TableCell, {\n          key: row.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }\n        }, row.id), /*#__PURE__*/React.createElement(TableCell, {\n          key: row.child,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }\n        }, row.child), /*#__PURE__*/React.createElement(TableCell, {\n          key: row.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        }, row.name))));\n\n      default:\n        return /*#__PURE__*/React.createElement(Typography, {\n          variant: \"overline\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }\n        }, \"Log in to access your accounts.\");\n    }\n  }\n\n  componentDidMount() {\n    this.fetchCustomers();\n    this.setState({\n      selected: ''\n    });\n  }\n\n  isSelected(id) {\n    return this.state.selected === id;\n  }\n\n  async handleClick(event, row) {\n    this.setState({\n      selected: row.child\n    });\n    const loginId = row.id;\n    const customerId = row.child;\n    const name = row.name;\n    const {\n      data\n    } = await axios.post('/client', new URLSearchParams({\n      loginId,\n      customerId,\n      name\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \"Available Customer IDs\"), /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"Select\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \"Login ID\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"Client Account ID\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, \"Client Account Name\"))), this.pickContentToDisplay()));\n  }\n\n}\n\nexport default Accounts;","map":{"version":3,"sources":["/home/kjchan/step-react-ads/client/src/Dashboard/PageComponents/LoginDashboard/Accounts.js"],"names":["React","axios","Title","Typography","Table","TableBody","TableCell","TableHead","TableRow","Checkbox","Accounts","Component","constructor","props","fetchCustomers","bind","handleClick","isSelected","state","customerIds","selected","status","errorMessage","setState","data","get","meta","Error","message","console","log","response","err","pickContentToDisplay","map","row","id","event","child","name","componentDidMount","loginId","customerId","post","URLSearchParams","render"],"mappings":"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","sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport axios from 'axios';\nimport Title from '../../Utilities/Title';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass Accounts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchCustomers = this.fetchCustomers.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.isSelected = this.isSelected.bind(this);\n    this.state = {\n      customerIds: [],\n      selected: '',\n      status: 'none authenticated',\n      errorMessage: '',\n    };\n  }\n\n  async fetchCustomers() {\n    this.setState({ status: 'loading' });\n\n    try {\n      const { data } = await axios.get('/customer');\n\n      if (data.meta.status !== '200') {\n        throw new Error(data.meta.message);\n      } else {\n        console.log(data.response);\n        this.setState({\n          customerIds: data.response,\n          status: 'loaded',\n        });\n      }\n    } catch (err) {\n      console.log(err.message);\n      this.setState({\n        status: 'none authenticated',\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  pickContentToDisplay() {\n    const customerIds = this.state.customerIds;\n    console.log(customerIds);\n    switch (this.state.status) {\n      case 'none authenticated':\n        return (\n          <Typography variant=\"overline\">\n            Log in to access your accounts.\n          </Typography>\n        );\n      case 'error':\n        return (\n          <Typography variant=\"overline\">\n            {\"Something Went Wrong. Here's the Error Message: \" +\n              this.state.errorMessage}\n          </Typography>\n        );\n      case 'loading':\n        return <Typography variant=\"overline\">Loading . . .</Typography>;\n      case 'loaded':\n        return (\n          <TableBody>\n            {customerIds.map((row) => (\n              <TableRow\n                key={row.id}\n                onClick={(event) => this.handleClick(event, row)}\n                role=\"checkbox\"\n                aria-checked={this.isSelected(row.child)}\n                tabIndex={-1}\n                selected={this.isSelected(row.child)}\n                hover\n              >\n                <TableCell padding=\"checkbox\">\n                  <Checkbox checked={this.isSelected(row.child)} />\n                </TableCell>\n                <TableCell key={row.id}>{row.id}</TableCell>\n                <TableCell key={row.child}>{row.child}</TableCell>\n                <TableCell key={row.name}>{row.name}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        );\n      default:\n        return (\n          <Typography variant=\"overline\">\n            Log in to access your accounts.\n          </Typography>\n        );\n    }\n  }\n\n  componentDidMount() {\n    this.fetchCustomers();\n    this.setState({\n      selected: '',\n    });\n  }\n\n  isSelected(id) {\n    return this.state.selected === id;\n  }\n\n  async handleClick(event, row) {\n    this.setState({\n      selected: row.child,\n    });\n    const loginId = row.id;\n    const customerId = row.child;\n    const name = row.name;\n    const { data } = await axios.post(\n      '/client',\n      new URLSearchParams({ loginId, customerId, name }),\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Title>Available Customer IDs</Title>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Select</TableCell>\n              <TableCell>Login ID</TableCell>\n              <TableCell>Client Account ID</TableCell>\n              <TableCell>Client Account Name</TableCell>\n            </TableRow>\n          </TableHead>\n          {this.pickContentToDisplay()}\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Accounts;\n"]},"metadata":{},"sourceType":"module"}