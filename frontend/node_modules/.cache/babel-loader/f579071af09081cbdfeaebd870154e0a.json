{"ast":null,"code":";\n\n(function (root, factory) {\n  // eslint-disable-line no-extra-semi\n  var deepDiff = factory(root); // eslint-disable-next-line no-undef\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define('DeepDiff', function () {\n      // eslint-disable-line no-undef\n      return deepDiff;\n    });\n  } else if (typeof exports === 'object' || typeof navigator === 'object' && navigator.product.match(/ReactNative/i)) {\n    // Node.js or ReactNative\n    module.exports = deepDiff;\n  } else {\n    // Browser globals\n    var _deepdiff = root.DeepDiff;\n\n    deepDiff.noConflict = function () {\n      if (root.DeepDiff === deepDiff) {\n        root.DeepDiff = _deepdiff;\n      }\n\n      return deepDiff;\n    };\n\n    root.DeepDiff = deepDiff;\n  }\n})(this, function (root) {\n  var validKinds = ['N', 'E', 'A', 'D']; // nodejs compatible on server side and in the browser.\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  }\n\n  function Diff(kind, path) {\n    Object.defineProperty(this, 'kind', {\n      value: kind,\n      enumerable: true\n    });\n\n    if (path && path.length) {\n      Object.defineProperty(this, 'path', {\n        value: path,\n        enumerable: true\n      });\n    }\n  }\n\n  function DiffEdit(path, origin, value) {\n    DiffEdit.super_.call(this, 'E', path);\n    Object.defineProperty(this, 'lhs', {\n      value: origin,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n\n  inherits(DiffEdit, Diff);\n\n  function DiffNew(path, value) {\n    DiffNew.super_.call(this, 'N', path);\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n\n  inherits(DiffNew, Diff);\n\n  function DiffDeleted(path, value) {\n    DiffDeleted.super_.call(this, 'D', path);\n    Object.defineProperty(this, 'lhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n\n  inherits(DiffDeleted, Diff);\n\n  function DiffArray(path, index, item) {\n    DiffArray.super_.call(this, 'A', path);\n    Object.defineProperty(this, 'index', {\n      value: index,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'item', {\n      value: item,\n      enumerable: true\n    });\n  }\n\n  inherits(DiffArray, Diff);\n\n  function arrayRemove(arr, from, to) {\n    var rest = arr.slice((to || from) + 1 || arr.length);\n    arr.length = from < 0 ? arr.length + from : from;\n    arr.push.apply(arr, rest);\n    return arr;\n  }\n\n  function realTypeOf(subject) {\n    var type = typeof subject;\n\n    if (type !== 'object') {\n      return type;\n    }\n\n    if (subject === Math) {\n      return 'math';\n    } else if (subject === null) {\n      return 'null';\n    } else if (Array.isArray(subject)) {\n      return 'array';\n    } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n      return 'date';\n    } else if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString())) {\n      return 'regexp';\n    }\n\n    return 'object';\n  } // http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n\n\n  function hashThisString(string) {\n    var hash = 0;\n\n    if (string.length === 0) {\n      return hash;\n    }\n\n    for (var i = 0; i < string.length; i++) {\n      var char = string.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n\n    return hash;\n  } // Gets a hash of the given object in an array order-independent fashion\n  // also object key order independent (easier since they can be alphabetized)\n\n\n  function getOrderIndependentHash(object) {\n    var accum = 0;\n    var type = realTypeOf(object);\n\n    if (type === 'array') {\n      object.forEach(function (item) {\n        // Addition is commutative so this is order indep\n        accum += getOrderIndependentHash(item);\n      });\n      var arrayString = '[type: array, hash: ' + accum + ']';\n      return accum + hashThisString(arrayString);\n    }\n\n    if (type === 'object') {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          var keyValueString = '[ type: object, key: ' + key + ', value hash: ' + getOrderIndependentHash(object[key]) + ']';\n          accum += hashThisString(keyValueString);\n        }\n      }\n\n      return accum;\n    } // Non object, non array...should be good?\n\n\n    var stringToHash = '[ type: ' + type + ' ; value: ' + object + ']';\n    return accum + hashThisString(stringToHash);\n  }\n\n  function deepDiff(lhs, rhs, changes, prefilter, path, key, stack, orderIndependent) {\n    changes = changes || [];\n    path = path || [];\n    stack = stack || [];\n    var currentPath = path.slice(0);\n\n    if (typeof key !== 'undefined' && key !== null) {\n      if (prefilter) {\n        if (typeof prefilter === 'function' && prefilter(currentPath, key)) {\n          return;\n        } else if (typeof prefilter === 'object') {\n          if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) {\n            return;\n          }\n\n          if (prefilter.normalize) {\n            var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n\n            if (alt) {\n              lhs = alt[0];\n              rhs = alt[1];\n            }\n          }\n        }\n      }\n\n      currentPath.push(key);\n    } // Use string comparison for regexes\n\n\n    if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n      lhs = lhs.toString();\n      rhs = rhs.toString();\n    }\n\n    var ltype = typeof lhs;\n    var rtype = typeof rhs;\n    var i, j, k, other;\n    var ldefined = ltype !== 'undefined' || stack && stack.length > 0 && stack[stack.length - 1].lhs && Object.getOwnPropertyDescriptor(stack[stack.length - 1].lhs, key);\n    var rdefined = rtype !== 'undefined' || stack && stack.length > 0 && stack[stack.length - 1].rhs && Object.getOwnPropertyDescriptor(stack[stack.length - 1].rhs, key);\n\n    if (!ldefined && rdefined) {\n      changes.push(new DiffNew(currentPath, rhs));\n    } else if (!rdefined && ldefined) {\n      changes.push(new DiffDeleted(currentPath, lhs));\n    } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (realTypeOf(lhs) === 'date' && lhs - rhs !== 0) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n      for (i = stack.length - 1; i > -1; --i) {\n        if (stack[i].lhs === lhs) {\n          other = true;\n          break;\n        }\n      }\n\n      if (!other) {\n        stack.push({\n          lhs: lhs,\n          rhs: rhs\n        });\n\n        if (Array.isArray(lhs)) {\n          // If order doesn't matter, we need to sort our arrays\n          if (orderIndependent) {\n            lhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n            rhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n          }\n\n          i = rhs.length - 1;\n          j = lhs.length - 1;\n\n          while (i > j) {\n            changes.push(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i--])));\n          }\n\n          while (j > i) {\n            changes.push(new DiffArray(currentPath, j, new DiffDeleted(undefined, lhs[j--])));\n          }\n\n          for (; i >= 0; --i) {\n            deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack, orderIndependent);\n          }\n        } else {\n          var akeys = Object.keys(lhs);\n          var pkeys = Object.keys(rhs);\n\n          for (i = 0; i < akeys.length; ++i) {\n            k = akeys[i];\n            other = pkeys.indexOf(k);\n\n            if (other >= 0) {\n              deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n              pkeys[other] = null;\n            } else {\n              deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n\n          for (i = 0; i < pkeys.length; ++i) {\n            k = pkeys[i];\n\n            if (k) {\n              deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n        }\n\n        stack.length = stack.length - 1;\n      } else if (lhs !== rhs) {\n        // lhs is contains a cycle at this element and it differs from rhs\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    } else if (lhs !== rhs) {\n      if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    }\n  }\n\n  function observableDiff(lhs, rhs, observer, prefilter, orderIndependent) {\n    var changes = [];\n    deepDiff(lhs, rhs, changes, prefilter, null, null, null, orderIndependent);\n\n    if (observer) {\n      for (var i = 0; i < changes.length; ++i) {\n        observer(changes[i]);\n      }\n    }\n\n    return changes;\n  }\n\n  function orderIndependentDeepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n    return deepDiff(lhs, rhs, changes, prefilter, path, key, stack, true);\n  }\n\n  function accumulateDiff(lhs, rhs, prefilter, accum) {\n    var observer = accum ? function (difference) {\n      if (difference) {\n        accum.push(difference);\n      }\n    } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter);\n    return accum ? accum : changes.length ? changes : undefined;\n  }\n\n  function accumulateOrderIndependentDiff(lhs, rhs, prefilter, accum) {\n    var observer = accum ? function (difference) {\n      if (difference) {\n        accum.push(difference);\n      }\n    } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter, true);\n    return accum ? accum : changes.length ? changes : undefined;\n  }\n\n  function applyArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      var it = arr[index],\n          i,\n          u = change.path.length - 1;\n\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n\n        case 'D':\n          delete it[change.path[i]];\n          break;\n\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    } else {\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(arr[index], change.index, change.item);\n          break;\n\n        case 'D':\n          arr = arrayRemove(arr, index);\n          break;\n\n        case 'E':\n        case 'N':\n          arr[index] = change.rhs;\n          break;\n      }\n    }\n\n    return arr;\n  }\n\n  function applyChange(target, source, change) {\n    if (typeof change === 'undefined' && source && ~validKinds.indexOf(source.kind)) {\n      change = source;\n    }\n\n    if (target && change && change.kind) {\n      var it = target,\n          i = -1,\n          last = change.path ? change.path.length - 1 : 0;\n\n      while (++i < last) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = typeof change.path[i + 1] !== 'undefined' && typeof change.path[i + 1] === 'number' ? [] : {};\n        }\n\n        it = it[change.path[i]];\n      }\n\n      switch (change.kind) {\n        case 'A':\n          if (change.path && typeof it[change.path[i]] === 'undefined') {\n            it[change.path[i]] = [];\n          }\n\n          applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n          break;\n\n        case 'D':\n          delete it[change.path[i]];\n          break;\n\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    }\n  }\n\n  function revertArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      // the structure of the object at the index has changed...\n      var it = arr[index],\n          i,\n          u = change.path.length - 1;\n\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n\n        case 'D':\n          it[change.path[i]] = change.lhs;\n          break;\n\n        case 'E':\n          it[change.path[i]] = change.lhs;\n          break;\n\n        case 'N':\n          delete it[change.path[i]];\n          break;\n      }\n    } else {\n      // the array item is different...\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(arr[index], change.index, change.item);\n          break;\n\n        case 'D':\n          arr[index] = change.lhs;\n          break;\n\n        case 'E':\n          arr[index] = change.lhs;\n          break;\n\n        case 'N':\n          arr = arrayRemove(arr, index);\n          break;\n      }\n    }\n\n    return arr;\n  }\n\n  function revertChange(target, source, change) {\n    if (target && source && change && change.kind) {\n      var it = target,\n          i,\n          u;\n      u = change.path.length - 1;\n\n      for (i = 0; i < u; i++) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = {};\n        }\n\n        it = it[change.path[i]];\n      }\n\n      switch (change.kind) {\n        case 'A':\n          // Array was modified...\n          // it will be an array...\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n\n        case 'D':\n          // Item was deleted...\n          it[change.path[i]] = change.lhs;\n          break;\n\n        case 'E':\n          // Item was edited...\n          it[change.path[i]] = change.lhs;\n          break;\n\n        case 'N':\n          // Item is new...\n          delete it[change.path[i]];\n          break;\n      }\n    }\n  }\n\n  function applyDiff(target, source, filter) {\n    if (target && source) {\n      var onChange = function onChange(change) {\n        if (!filter || filter(target, source, change)) {\n          applyChange(target, source, change);\n        }\n      };\n\n      observableDiff(target, source, onChange);\n    }\n  }\n\n  Object.defineProperties(accumulateDiff, {\n    diff: {\n      value: accumulateDiff,\n      enumerable: true\n    },\n    orderIndependentDiff: {\n      value: accumulateOrderIndependentDiff,\n      enumerable: true\n    },\n    observableDiff: {\n      value: observableDiff,\n      enumerable: true\n    },\n    orderIndependentObservableDiff: {\n      value: orderIndependentDeepDiff,\n      enumerable: true\n    },\n    orderIndepHash: {\n      value: getOrderIndependentHash,\n      enumerable: true\n    },\n    applyDiff: {\n      value: applyDiff,\n      enumerable: true\n    },\n    applyChange: {\n      value: applyChange,\n      enumerable: true\n    },\n    revertChange: {\n      value: revertChange,\n      enumerable: true\n    },\n    isConflict: {\n      value: function value() {\n        return typeof $conflict !== 'undefined';\n      },\n      enumerable: true\n    }\n  }); // hackish...\n\n  accumulateDiff.DeepDiff = accumulateDiff; // ...but works with:\n  // import DeepDiff from 'deep-diff'\n  // import { DeepDiff } from 'deep-diff'\n  // const DeepDiff = require('deep-diff');\n  // const { DeepDiff } = require('deep-diff');\n\n  if (root) {\n    root.DeepDiff = accumulateDiff;\n  }\n\n  return accumulateDiff;\n});","map":{"version":3,"sources":["/home/kjchan/step-react-ads/client/node_modules/deep-diff/index.js"],"names":["root","factory","deepDiff","define","amd","exports","navigator","product","match","module","_deepdiff","DeepDiff","noConflict","validKinds","inherits","ctor","superCtor","super_","prototype","Object","create","constructor","value","enumerable","writable","configurable","Diff","kind","path","defineProperty","length","DiffEdit","origin","call","DiffNew","DiffDeleted","DiffArray","index","item","arrayRemove","arr","from","to","rest","slice","push","apply","realTypeOf","subject","type","Math","Array","isArray","toString","test","hashThisString","string","hash","i","char","charCodeAt","getOrderIndependentHash","object","accum","forEach","arrayString","key","hasOwnProperty","keyValueString","stringToHash","lhs","rhs","changes","prefilter","stack","orderIndependent","currentPath","normalize","alt","ltype","rtype","j","k","other","ldefined","getOwnPropertyDescriptor","rdefined","sort","a","b","undefined","akeys","keys","pkeys","indexOf","isNaN","observableDiff","observer","orderIndependentDeepDiff","accumulateDiff","difference","accumulateOrderIndependentDiff","applyArrayChange","change","it","u","applyChange","target","source","last","revertArrayChange","revertChange","applyDiff","filter","onChange","defineProperties","diff","orderIndependentDiff","orderIndependentObservableDiff","orderIndepHash","isConflict","$conflict"],"mappings":"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","sourcesContent":[";(function(root, factory) { // eslint-disable-line no-extra-semi\n  var deepDiff = factory(root);\n  // eslint-disable-next-line no-undef\n  if (typeof define === 'function' && define.amd) {\n      // AMD\n      define('DeepDiff', function() { // eslint-disable-line no-undef\n          return deepDiff;\n      });\n  } else if (typeof exports === 'object' || typeof navigator === 'object' && navigator.product.match(/ReactNative/i)) {\n      // Node.js or ReactNative\n      module.exports = deepDiff;\n  } else {\n      // Browser globals\n      var _deepdiff = root.DeepDiff;\n      deepDiff.noConflict = function() {\n          if (root.DeepDiff === deepDiff) {\n              root.DeepDiff = _deepdiff;\n          }\n          return deepDiff;\n      };\n      root.DeepDiff = deepDiff;\n  }\n}(this, function(root) {\n  var validKinds = ['N', 'E', 'A', 'D'];\n\n  // nodejs compatible on server side and in the browser.\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  }\n\n  function Diff(kind, path) {\n    Object.defineProperty(this, 'kind', {\n      value: kind,\n      enumerable: true\n    });\n    if (path && path.length) {\n      Object.defineProperty(this, 'path', {\n        value: path,\n        enumerable: true\n      });\n    }\n  }\n\n  function DiffEdit(path, origin, value) {\n    DiffEdit.super_.call(this, 'E', path);\n    Object.defineProperty(this, 'lhs', {\n      value: origin,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffEdit, Diff);\n\n  function DiffNew(path, value) {\n    DiffNew.super_.call(this, 'N', path);\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffNew, Diff);\n\n  function DiffDeleted(path, value) {\n    DiffDeleted.super_.call(this, 'D', path);\n    Object.defineProperty(this, 'lhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffDeleted, Diff);\n\n  function DiffArray(path, index, item) {\n    DiffArray.super_.call(this, 'A', path);\n    Object.defineProperty(this, 'index', {\n      value: index,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'item', {\n      value: item,\n      enumerable: true\n    });\n  }\n  inherits(DiffArray, Diff);\n\n  function arrayRemove(arr, from, to) {\n    var rest = arr.slice((to || from) + 1 || arr.length);\n    arr.length = from < 0 ? arr.length + from : from;\n    arr.push.apply(arr, rest);\n    return arr;\n  }\n\n  function realTypeOf(subject) {\n    var type = typeof subject;\n    if (type !== 'object') {\n      return type;\n    }\n\n    if (subject === Math) {\n      return 'math';\n    } else if (subject === null) {\n      return 'null';\n    } else if (Array.isArray(subject)) {\n      return 'array';\n    } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n      return 'date';\n    } else if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString())) {\n      return 'regexp';\n    }\n    return 'object';\n  }\n\n  // http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n  function hashThisString(string) {\n    var hash = 0;\n    if (string.length === 0) { return hash; }\n    for (var i = 0; i < string.length; i++) {\n      var char = string.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n  }\n\n  // Gets a hash of the given object in an array order-independent fashion\n  // also object key order independent (easier since they can be alphabetized)\n  function getOrderIndependentHash(object) {\n    var accum = 0;\n    var type = realTypeOf(object);\n\n    if (type === 'array') {\n      object.forEach(function (item) {\n        // Addition is commutative so this is order indep\n        accum += getOrderIndependentHash(item);\n      });\n\n      var arrayString = '[type: array, hash: ' + accum + ']';\n      return accum + hashThisString(arrayString);\n    }\n\n    if (type === 'object') {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          var keyValueString = '[ type: object, key: ' + key + ', value hash: ' + getOrderIndependentHash(object[key]) + ']';\n          accum += hashThisString(keyValueString);\n        }\n      }\n\n      return accum;\n    }\n\n    // Non object, non array...should be good?\n    var stringToHash = '[ type: ' + type + ' ; value: ' + object + ']';\n    return accum + hashThisString(stringToHash);\n  }\n\n  function deepDiff(lhs, rhs, changes, prefilter, path, key, stack, orderIndependent) {\n    changes = changes || [];\n    path = path || [];\n    stack = stack || [];\n    var currentPath = path.slice(0);\n    if (typeof key !== 'undefined' && key !== null) {\n      if (prefilter) {\n        if (typeof (prefilter) === 'function' && prefilter(currentPath, key)) {\n          return;\n        } else if (typeof (prefilter) === 'object') {\n          if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) {\n            return;\n          }\n          if (prefilter.normalize) {\n            var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n            if (alt) {\n              lhs = alt[0];\n              rhs = alt[1];\n            }\n          }\n        }\n      }\n      currentPath.push(key);\n    }\n\n    // Use string comparison for regexes\n    if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n      lhs = lhs.toString();\n      rhs = rhs.toString();\n    }\n\n    var ltype = typeof lhs;\n    var rtype = typeof rhs;\n    var i, j, k, other;\n\n    var ldefined = ltype !== 'undefined' ||\n      (stack && (stack.length > 0) && stack[stack.length - 1].lhs &&\n        Object.getOwnPropertyDescriptor(stack[stack.length - 1].lhs, key));\n    var rdefined = rtype !== 'undefined' ||\n      (stack && (stack.length > 0) && stack[stack.length - 1].rhs &&\n        Object.getOwnPropertyDescriptor(stack[stack.length - 1].rhs, key));\n\n    if (!ldefined && rdefined) {\n      changes.push(new DiffNew(currentPath, rhs));\n    } else if (!rdefined && ldefined) {\n      changes.push(new DiffDeleted(currentPath, lhs));\n    } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (realTypeOf(lhs) === 'date' && (lhs - rhs) !== 0) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n      for (i = stack.length - 1; i > -1; --i) {\n        if (stack[i].lhs === lhs) {\n          other = true;\n          break;\n        }\n      }\n      if (!other) {\n        stack.push({ lhs: lhs, rhs: rhs });\n        if (Array.isArray(lhs)) {\n          // If order doesn't matter, we need to sort our arrays\n          if (orderIndependent) {\n            lhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n\n            rhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n          }\n          i = rhs.length - 1;\n          j = lhs.length - 1;\n          while (i > j) {\n            changes.push(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i--])));\n          }\n          while (j > i) {\n            changes.push(new DiffArray(currentPath, j, new DiffDeleted(undefined, lhs[j--])));\n          }\n          for (; i >= 0; --i) {\n            deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack, orderIndependent);\n          }\n        } else {\n          var akeys = Object.keys(lhs);\n          var pkeys = Object.keys(rhs);\n          for (i = 0; i < akeys.length; ++i) {\n            k = akeys[i];\n            other = pkeys.indexOf(k);\n            if (other >= 0) {\n              deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n              pkeys[other] = null;\n            } else {\n              deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n          for (i = 0; i < pkeys.length; ++i) {\n            k = pkeys[i];\n            if (k) {\n              deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n        }\n        stack.length = stack.length - 1;\n      } else if (lhs !== rhs) {\n        // lhs is contains a cycle at this element and it differs from rhs\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    } else if (lhs !== rhs) {\n      if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    }\n  }\n\n  function observableDiff(lhs, rhs, observer, prefilter, orderIndependent) {\n    var changes = [];\n    deepDiff(lhs, rhs, changes, prefilter, null, null, null, orderIndependent);\n    if (observer) {\n      for (var i = 0; i < changes.length; ++i) {\n        observer(changes[i]);\n      }\n    }\n    return changes;\n  }\n\n  function orderIndependentDeepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n    return deepDiff(lhs, rhs, changes, prefilter, path, key, stack, true);\n  }\n\n  function accumulateDiff(lhs, rhs, prefilter, accum) {\n    var observer = (accum) ?\n      function (difference) {\n        if (difference) {\n          accum.push(difference);\n        }\n      } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter);\n    return (accum) ? accum : (changes.length) ? changes : undefined;\n  }\n\n  function accumulateOrderIndependentDiff(lhs, rhs, prefilter, accum) {\n    var observer = (accum) ?\n      function (difference) {\n        if (difference) {\n          accum.push(difference);\n        }\n      } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter, true);\n    return (accum) ? accum : (changes.length) ? changes : undefined;\n  }\n\n  function applyArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      var it = arr[index],\n        i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    } else {\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr = arrayRemove(arr, index);\n          break;\n        case 'E':\n        case 'N':\n          arr[index] = change.rhs;\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function applyChange(target, source, change) {\n    if (typeof change === 'undefined' && source && ~validKinds.indexOf(source.kind)) {\n      change = source;\n    }\n    if (target && change && change.kind) {\n      var it = target,\n        i = -1,\n        last = change.path ? change.path.length - 1 : 0;\n      while (++i < last) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = (typeof change.path[i + 1] !== 'undefined' && typeof change.path[i + 1] === 'number') ? [] : {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          if (change.path && typeof it[change.path[i]] === 'undefined') {\n            it[change.path[i]] = [];\n          }\n          applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    }\n  }\n\n  function revertArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      // the structure of the object at the index has changed...\n      var it = arr[index],\n        i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          delete it[change.path[i]];\n          break;\n      }\n    } else {\n      // the array item is different...\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr[index] = change.lhs;\n          break;\n        case 'E':\n          arr[index] = change.lhs;\n          break;\n        case 'N':\n          arr = arrayRemove(arr, index);\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function revertChange(target, source, change) {\n    if (target && source && change && change.kind) {\n      var it = target,\n        i, u;\n      u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          // Array was modified...\n          // it will be an array...\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          // Item was deleted...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          // Item was edited...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          // Item is new...\n          delete it[change.path[i]];\n          break;\n      }\n    }\n  }\n\n  function applyDiff(target, source, filter) {\n    if (target && source) {\n      var onChange = function (change) {\n        if (!filter || filter(target, source, change)) {\n          applyChange(target, source, change);\n        }\n      };\n      observableDiff(target, source, onChange);\n    }\n  }\n\n  Object.defineProperties(accumulateDiff, {\n\n    diff: {\n      value: accumulateDiff,\n      enumerable: true\n    },\n    orderIndependentDiff: {\n      value: accumulateOrderIndependentDiff,\n      enumerable: true\n    },\n    observableDiff: {\n      value: observableDiff,\n      enumerable: true\n    },\n    orderIndependentObservableDiff: {\n      value: orderIndependentDeepDiff,\n      enumerable: true\n    },\n    orderIndepHash: {\n      value: getOrderIndependentHash,\n      enumerable: true\n    },\n    applyDiff: {\n      value: applyDiff,\n      enumerable: true\n    },\n    applyChange: {\n      value: applyChange,\n      enumerable: true\n    },\n    revertChange: {\n      value: revertChange,\n      enumerable: true\n    },\n    isConflict: {\n      value: function () {\n        return typeof $conflict !== 'undefined';\n      },\n      enumerable: true\n    }\n  });\n\n  // hackish...\n  accumulateDiff.DeepDiff = accumulateDiff;\n  // ...but works with:\n  // import DeepDiff from 'deep-diff'\n  // import { DeepDiff } from 'deep-diff'\n  // const DeepDiff = require('deep-diff');\n  // const { DeepDiff } = require('deep-diff');\n\n  if (root) {\n    root.DeepDiff = accumulateDiff;\n  }\n\n  return accumulateDiff;\n}));\n"]},"metadata":{},"sourceType":"script"}