{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar deep_diff_1 = require(\"deep-diff\"); // @ts-ignore\n\n\nvar nested_property_1 = require(\"nested-property\");\n\nfunction isPlainObj() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return args.every(function (d) {\n    if (!d) {\n      return false;\n    }\n\n    var prototype = Object.getPrototypeOf(d);\n    return Object.prototype.toString.call(d).slice(8, -1) === 'Object' && (prototype === null || prototype === Object.getPrototypeOf({}));\n  });\n}\n\nfunction isArray() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return args.every(Array.isArray);\n}\n\nfunction isNumber() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return args.every(function (d) {\n    return typeof d === 'number';\n  });\n}\n\nfunction treeChanges(data, nextData) {\n  if (!data || !nextData) {\n    throw new Error('Missing required parameters');\n  }\n\n  return {\n    changed: function changed(key) {\n      var left = nested_property_1.get(data, key);\n      var right = nested_property_1.get(nextData, key);\n\n      if (isArray(left, right) || isPlainObj(left, right)) {\n        return !!deep_diff_1.diff(left, right);\n      }\n\n      return left !== right;\n    },\n    changedFrom: function changedFrom(key, previous, actual) {\n      if (typeof key === 'undefined') {\n        throw new Error('Key parameter is required');\n      }\n\n      var useActual = typeof previous !== 'undefined' && typeof actual !== 'undefined';\n      var left = nested_property_1.get(data, key);\n      var right = nested_property_1.get(nextData, key);\n      var leftComparator = Array.isArray(previous) ? previous.indexOf(left) >= 0 : left === previous;\n      var rightComparator = Array.isArray(actual) ? actual.indexOf(right) >= 0 : right === actual;\n      return leftComparator && (useActual ? rightComparator : !useActual);\n    },\n    changedTo: function changedTo(key, actual) {\n      if (typeof key === 'undefined') {\n        throw new Error('Key parameter is required');\n      }\n\n      var left = nested_property_1.get(data, key);\n      var right = nested_property_1.get(nextData, key);\n      var leftComparator = Array.isArray(actual) ? actual.indexOf(left) < 0 : left !== actual;\n      var rightComparator = Array.isArray(actual) ? actual.indexOf(right) >= 0 : right === actual;\n      return leftComparator && rightComparator;\n    },\n    increased: function increased(key) {\n      if (typeof key === 'undefined') {\n        throw new Error('Key parameter is required');\n      }\n\n      return isNumber(nested_property_1.get(data, key), nested_property_1.get(nextData, key)) && nested_property_1.get(data, key) < nested_property_1.get(nextData, key);\n    },\n    decreased: function decreased(key) {\n      if (typeof key === 'undefined') {\n        throw new Error('Key parameter is required');\n      }\n\n      return isNumber(nested_property_1.get(data, key), nested_property_1.get(nextData, key)) && nested_property_1.get(data, key) > nested_property_1.get(nextData, key);\n    }\n  };\n}\n\nexports.default = treeChanges;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar deep_diff_1 = require(\"deep-diff\");\n// @ts-ignore\nvar nested_property_1 = require(\"nested-property\");\nfunction isPlainObj() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.every(function (d) {\n        if (!d) {\n            return false;\n        }\n        var prototype = Object.getPrototypeOf(d);\n        return (Object.prototype.toString.call(d).slice(8, -1) === 'Object' &&\n            (prototype === null || prototype === Object.getPrototypeOf({})));\n    });\n}\nfunction isArray() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.every(Array.isArray);\n}\nfunction isNumber() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.every(function (d) { return typeof d === 'number'; });\n}\nfunction treeChanges(data, nextData) {\n    if (!data || !nextData) {\n        throw new Error('Missing required parameters');\n    }\n    return {\n        changed: function (key) {\n            var left = nested_property_1.get(data, key);\n            var right = nested_property_1.get(nextData, key);\n            if (isArray(left, right) || isPlainObj(left, right)) {\n                return !!deep_diff_1.diff(left, right);\n            }\n            return left !== right;\n        },\n        changedFrom: function (key, previous, actual) {\n            if (typeof key === 'undefined') {\n                throw new Error('Key parameter is required');\n            }\n            var useActual = typeof previous !== 'undefined' && typeof actual !== 'undefined';\n            var left = nested_property_1.get(data, key);\n            var right = nested_property_1.get(nextData, key);\n            var leftComparator = Array.isArray(previous)\n                ? previous.indexOf(left) >= 0\n                : left === previous;\n            var rightComparator = Array.isArray(actual) ? actual.indexOf(right) >= 0 : right === actual;\n            return leftComparator && (useActual ? rightComparator : !useActual);\n        },\n        changedTo: function (key, actual) {\n            if (typeof key === 'undefined') {\n                throw new Error('Key parameter is required');\n            }\n            var left = nested_property_1.get(data, key);\n            var right = nested_property_1.get(nextData, key);\n            var leftComparator = Array.isArray(actual) ? actual.indexOf(left) < 0 : left !== actual;\n            var rightComparator = Array.isArray(actual) ? actual.indexOf(right) >= 0 : right === actual;\n            return leftComparator && rightComparator;\n        },\n        increased: function (key) {\n            if (typeof key === 'undefined') {\n                throw new Error('Key parameter is required');\n            }\n            return (isNumber(nested_property_1.get(data, key), nested_property_1.get(nextData, key)) &&\n                nested_property_1.get(data, key) < nested_property_1.get(nextData, key));\n        },\n        decreased: function (key) {\n            if (typeof key === 'undefined') {\n                throw new Error('Key parameter is required');\n            }\n            return (isNumber(nested_property_1.get(data, key), nested_property_1.get(nextData, key)) &&\n                nested_property_1.get(data, key) > nested_property_1.get(nextData, key));\n        },\n    };\n}\nexports.default = treeChanges;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}