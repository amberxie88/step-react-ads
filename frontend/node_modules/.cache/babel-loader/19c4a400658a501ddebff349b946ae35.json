{"ast":null,"code":"var _jsxFileName = \"/home/kjchan/step-react-ads/client/src/Dashboard/PageComponents/ReportsDashboard/Reports/Chart.js\";\n\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport * as HttpStatus from 'http-status-codes';\nimport Title from '../../../Utilities/Title';\nimport { createChainedFunction } from '@material-ui/core';\nexport default function Chart() {\n  const theme = useTheme();\n  const [data, setData] = useState([]);\n  const [state, setState] = useState('loading');\n  useEffect(() => {\n    (async () => {\n      try {\n        // const {data} = await axios.get('/data');\n        const data = {\n          meta: {\n            status: HttpStatus.OK.toString()\n          },\n          response: {\n            data: [{\n              time: '00:00',\n              amount: 0\n            }, {\n              time: '03:00',\n              amount: 300\n            }, {\n              time: '06:00',\n              amount: 600\n            }, {\n              time: '09:00',\n              amount: 800\n            }, {\n              time: '12:00',\n              amount: 1500\n            }, {\n              time: '15:00',\n              amount: 2000\n            }, {\n              time: '18:00',\n              amount: 2400\n            }, {\n              time: '21:00',\n              amount: 2400\n            }, {\n              time: '24:00',\n              amount: 'undefined'\n            }]\n          }\n        };\n\n        if (data.meta.status !== HttpStatus.OK.toString()) {\n          throw new Error(data.meta.message);\n        } else {\n          setData(data.response.data);\n          setState('loaded');\n        }\n      } catch (err) {\n        console.log(err.message);\n        setData(err.message);\n        setState('error');\n      }\n    })();\n  }, []);\n\n  const pickContentToDisplay = () => {\n    switch (state) {\n      case 'loading':\n        return /*#__PURE__*/React.createElement(Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 16\n          }\n        }, \" Loading ... \");\n\n      case 'loaded':\n        return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(LineChart, {\n          data: data,\n          margin: {\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(XAxis, {\n          dataKey: \"time\",\n          stroke: theme.palette.text.secondary,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(YAxis, {\n          stroke: theme.palette.text.secondary,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          angle: 270,\n          position: \"left\",\n          style: {\n            textAnchor: 'middle',\n            fill: theme.palette.text.primary\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }\n        }, \"Sales ($)\")), /*#__PURE__*/React.createElement(Line, {\n          type: \"monotone\",\n          dataKey: \"amount\",\n          stroke: theme.palette.primary.main,\n          dot: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }\n        })));\n\n      case 'error':\n        return /*#__PURE__*/React.createElement(Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }\n        }, \"Something Went Wrong. Here's the Error Message: \" + data);\n\n      default:\n        return /*#__PURE__*/React.createElement(Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 16\n          }\n        }, \" Something Went Wrong\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, \"Today's Sales\"), pickContentToDisplay());\n}","map":{"version":3,"sources":["/home/kjchan/step-react-ads/client/src/Dashboard/PageComponents/ReportsDashboard/Reports/Chart.js"],"names":["React","useState","useEffect","useTheme","LineChart","Line","XAxis","YAxis","Label","ResponsiveContainer","axios","HttpStatus","Title","createChainedFunction","Chart","theme","data","setData","state","setState","meta","status","OK","toString","response","time","amount","Error","message","err","console","log","pickContentToDisplay","top","right","bottom","left","palette","text","secondary","textAnchor","fill","primary","main"],"mappings":"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","sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n} from 'recharts';\nimport axios from 'axios';\nimport * as HttpStatus from 'http-status-codes';\nimport Title from '../../../Utilities/Title';\nimport { createChainedFunction } from '@material-ui/core';\n\nexport default function Chart() {\n  const theme = useTheme();\n  const [data, setData] = useState([]);\n  const [state, setState] = useState('loading');\n  useEffect(() => {\n    (async () => {\n      try {\n        // const {data} = await axios.get('/data');\n        const data = {\n          meta: { status: HttpStatus.OK.toString() },\n          response: {\n            data: [\n              {\n                time: '00:00',\n                amount: 0,\n              },\n              {\n                time: '03:00',\n                amount: 300,\n              },\n              {\n                time: '06:00',\n                amount: 600,\n              },\n              {\n                time: '09:00',\n                amount: 800,\n              },\n              {\n                time: '12:00',\n                amount: 1500,\n              },\n              {\n                time: '15:00',\n                amount: 2000,\n              },\n              {\n                time: '18:00',\n                amount: 2400,\n              },\n              {\n                time: '21:00',\n                amount: 2400,\n              },\n              {\n                time: '24:00',\n                amount: 'undefined',\n              },\n            ],\n          },\n        };\n        if (data.meta.status !== HttpStatus.OK.toString()) {\n          throw new Error(data.meta.message);\n        } else {\n          setData(data.response.data);\n          setState('loaded');\n        }\n      } catch (err) {\n        console.log(err.message);\n        setData(err.message);\n        setState('error');\n      }\n    })();\n  }, []);\n\n  const pickContentToDisplay = () => {\n    switch (state) {\n      case 'loading':\n        return <Title> Loading ... </Title>;\n      case 'loaded':\n        return (\n          <ResponsiveContainer>\n            <LineChart\n              data={data}\n              margin={{\n                top: 16,\n                right: 16,\n                bottom: 0,\n                left: 24,\n              }}\n            >\n              <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n              <YAxis stroke={theme.palette.text.secondary}>\n                <Label\n                  angle={270}\n                  position=\"left\"\n                  style={{\n                    textAnchor: 'middle',\n                    fill: theme.palette.text.primary,\n                  }}\n                >\n                  Sales ($)\n                </Label>\n              </YAxis>\n              <Line\n                type=\"monotone\"\n                dataKey=\"amount\"\n                stroke={theme.palette.primary.main}\n                dot={false}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        );\n      case 'error':\n        return (\n          <Title>\n            {\"Something Went Wrong. Here's the Error Message: \" + data}\n          </Title>\n        );\n      default:\n        return <Title> Something Went Wrong</Title>;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Title>Today's Sales</Title>\n      {pickContentToDisplay()}\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}