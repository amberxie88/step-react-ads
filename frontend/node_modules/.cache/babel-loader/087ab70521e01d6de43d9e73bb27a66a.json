{"ast":null,"code":"var _jsxFileName = \"/home/kjchan/step-react-ads/client/src/Dashboard/PageComponents/ReportsDashboard/Reports/ClicksPerCampaignChart.js\";\n\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport * as HttpStatus from 'http-status-codes';\nimport Title from '../../../Utilities/Title';\nexport default function ClicksPerCampaignChart() {\n  const theme = useTheme();\n  const [data, setData] = useState([]); //data for chart along with setter function\n\n  const [state, setState] = useState('loading');\n  useEffect(() => {\n    //loads data asynchronously so page can load faster\n    (async () => {\n      try {\n        const {\n          data\n        } = await axios.get('/data'); //fake data so there's some actual results\n\n        console.log(data); // only returns 1 campaign\n        // const response = await axios.post(\n        //   '/campaign',\n        //   new URLSearchParams({\n        //     query: `SELECT campaign.name, metrics.clicks FROM campaign ORDER BY campaign.id`,\n        //   })\n        // );\n\n        if (data.meta.status !== HttpStatus.OK.toString()) {\n          throw new Error(data.meta.message);\n        } else {\n          setData(data.response);\n          setState('loaded');\n        }\n      } catch (err) {\n        console.log(err.message);\n        setData(err.message);\n        setState('error');\n      }\n    })();\n  }, []);\n\n  const pickContentToDisplay = () => {\n    switch (state) {\n      case 'loading':\n        return /*#__PURE__*/React.createElement(Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 16\n          }\n        }, \" Loading ... \");\n\n      case 'loaded':\n        return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(BarChart, {\n          data: data,\n          margin: {\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(XAxis, {\n          dataKey: \"campaign.name\",\n          stroke: theme.palette.text.secondary,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(YAxis, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Tooltip, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Legend, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Bar, {\n          dataKey: \"metrics.clicks\",\n          fill: \"#8884d8\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }\n        })));\n\n      case 'error':\n        return /*#__PURE__*/React.createElement(Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }\n        }, \"Something Went Wrong. Here's the Error Message: \" + data);\n\n      default:\n        return /*#__PURE__*/React.createElement(Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 16\n          }\n        }, \" Something Went Wrong\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Clicks Per Campaign\"), pickContentToDisplay());\n}","map":{"version":3,"sources":["/home/kjchan/step-react-ads/client/src/Dashboard/PageComponents/ReportsDashboard/Reports/ClicksPerCampaignChart.js"],"names":["React","useState","useEffect","useTheme","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","axios","HttpStatus","Title","ClicksPerCampaignChart","theme","data","setData","state","setState","get","console","log","meta","status","OK","toString","Error","message","response","err","pickContentToDisplay","top","right","bottom","left","palette","text","secondary"],"mappings":"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","sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport axios from 'axios';\nimport * as HttpStatus from 'http-status-codes';\nimport Title from '../../../Utilities/Title';\n\nexport default function ClicksPerCampaignChart() {\n  const theme = useTheme();\n  const [data, setData] = useState([]); //data for chart along with setter function\n  const [state, setState] = useState('loading');\n\n  useEffect(() => {\n    //loads data asynchronously so page can load faster\n    (async () => {\n      try {\n        const { data } = await axios.get('/data'); //fake data so there's some actual results\n        console.log(data);\n        // only returns 1 campaign\n        // const response = await axios.post(\n        //   '/campaign',\n        //   new URLSearchParams({\n        //     query: `SELECT campaign.name, metrics.clicks FROM campaign ORDER BY campaign.id`,\n        //   })\n        // );\n        if (data.meta.status !== HttpStatus.OK.toString()) {\n          throw new Error(data.meta.message);\n        } else {\n          setData(data.response);\n          setState('loaded');\n        }\n      } catch (err) {\n        console.log(err.message);\n        setData(err.message);\n        setState('error');\n      }\n    })();\n  }, []);\n\n  const pickContentToDisplay = () => {\n    switch (state) {\n      case 'loading':\n        return <Title> Loading ... </Title>;\n      case 'loaded':\n        return (\n          <ResponsiveContainer>\n            <BarChart\n              data={data}\n              margin={{\n                top: 16,\n                right: 16,\n                bottom: 0,\n                left: 24,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis\n                dataKey=\"campaign.name\"\n                stroke={theme.palette.text.secondary}\n              />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"metrics.clicks\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n        );\n      case 'error':\n        return (\n          <Title>\n            {\"Something Went Wrong. Here's the Error Message: \" + data}\n          </Title>\n        );\n      default:\n        return <Title> Something Went Wrong</Title>;\n    }\n  };\n  return (\n    <React.Fragment>\n      <Title>Clicks Per Campaign</Title>\n      {pickContentToDisplay()}\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}