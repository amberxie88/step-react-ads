{"ast":null,"code":"var _jsxFileName = \"/home/kjchan/step-react-ads/client/src/Dashboard/PageComponents/QueryDashboard/QueryAccount.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Title from '../../Utilities/Title';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nclass QueryAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getClient = this.getClient.bind(this);\n    this.state = {\n      selectedClient: [],\n      status: 'none selected'\n    };\n  }\n\n  async getClient() {\n    this.setState({\n      status: 'loading'\n    });\n    const {\n      data\n    } = await axios.get('/client');\n    console.log(data);\n\n    if (data.loginId) {\n      this.setState({\n        selectedClient: data,\n        status: 'loaded'\n      });\n    } else {\n      this.setState({\n        status: 'none selected'\n      });\n    }\n  }\n\n  pickContentToDisplay() {\n    const selectedClient = this.state.selectedClient;\n\n    switch (this.state.status) {\n      case 'none selected':\n        return /*#__PURE__*/React.createElement(Typography, {\n          variant: \"overline\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }\n        }, \"Select a client on the login page.\");\n\n      case 'loading':\n        return /*#__PURE__*/React.createElement(Typography, {\n          variant: \"overline\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 16\n          }\n        }, \"Loading . . .\");\n\n      case 'loaded':\n        return /*#__PURE__*/React.createElement(TableBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(TableRow, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          key: selectedClient.loginId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }\n        }, selectedClient.loginId), /*#__PURE__*/React.createElement(TableCell, {\n          key: selectedClient.customerId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }\n        }, selectedClient.customerId)));\n\n      default:\n        return /*#__PURE__*/React.createElement(Typography, {\n          variant: \"overline\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        }, \"Select a client on the login page.\");\n    }\n  }\n\n  componentDidMount() {\n    this.getClient();\n  }\n\n  render() {\n    const selectedClient = this.state.selectedClient;\n    console.log(selectedClient);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Selected Client Account to Query\"), /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Customer ID\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Client Account\"))), this.pickContentToDisplay()));\n  }\n\n}\n\nexport default QueryAccount;","map":{"version":3,"sources":["/home/kjchan/step-react-ads/client/src/Dashboard/PageComponents/QueryDashboard/QueryAccount.js"],"names":["React","axios","Title","Typography","Table","TableBody","TableCell","TableHead","TableRow","QueryAccount","Component","constructor","props","getClient","bind","state","selectedClient","status","setState","data","get","console","log","loginId","pickContentToDisplay","customerId","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,YAAN,SAA2BT,KAAK,CAACU,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,EADL;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAED,QAAMJ,SAAN,GAAkB;AAChB,SAAKK,QAAL,CAAc;AAAED,MAAAA,MAAM,EAAE;AAAV,KAAd;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,GAAN,CAAU,SAAV,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,QAAIA,IAAI,CAACI,OAAT,EAAkB;AAChB,WAAKL,QAAL,CAAc;AACZF,QAAAA,cAAc,EAAEG,IADJ;AAEZF,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID,KALD,MAKO;AACL,WAAKC,QAAL,CAAc;AAAED,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD;AACF;;AAEDO,EAAAA,oBAAoB,GAAG;AACrB,UAAMR,cAAc,GAAG,KAAKD,KAAL,CAAWC,cAAlC;;AACA,YAAQ,KAAKD,KAAL,CAAWE,MAAnB;AACE,WAAK,eAAL;AACE,4BACE,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF;;AAKF,WAAK,SAAL;AACE,4BAAO,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;;AACF,WAAK,QAAL;AACE,4BACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAED,cAAc,CAACO,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGP,cAAc,CAACO,OADlB,CADF,eAIE,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEP,cAAc,CAACS,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGT,cAAc,CAACS,UADlB,CAJF,CADF,CADF;;AAYF;AACE,4BACE,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF;AAvBJ;AA6BD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,SAAL;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAMX,cAAc,GAAG,KAAKD,KAAL,CAAWC,cAAlC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADF,CADF,EAOG,KAAKQ,oBAAL,EAPH,CAFF,CADF;AAcD;;AA9EwC;;AAiF3C,eAAef,YAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Title from '../../Utilities/Title';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nclass QueryAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getClient = this.getClient.bind(this);\n    this.state = {\n      selectedClient: [],\n      status: 'none selected',\n    };\n  }\n\n  async getClient() {\n    this.setState({ status: 'loading' });\n    const { data } = await axios.get('/client');\n    console.log(data);\n    if (data.loginId) {\n      this.setState({\n        selectedClient: data,\n        status: 'loaded',\n      });\n    } else {\n      this.setState({ status: 'none selected' });\n    }\n  }\n\n  pickContentToDisplay() {\n    const selectedClient = this.state.selectedClient;\n    switch (this.state.status) {\n      case 'none selected':\n        return (\n          <Typography variant=\"overline\">\n            Select a client on the login page.\n          </Typography>\n        );\n      case 'loading':\n        return <Typography variant=\"overline\">Loading . . .</Typography>;\n      case 'loaded':\n        return (\n          <TableBody>\n            <TableRow>\n              <TableCell key={selectedClient.loginId}>\n                {selectedClient.loginId}\n              </TableCell>\n              <TableCell key={selectedClient.customerId}>\n                {selectedClient.customerId}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        );\n      default:\n        return (\n          <Typography variant=\"overline\">\n            Select a client on the login page.\n          </Typography>\n        );\n    }\n  }\n\n  componentDidMount() {\n    this.getClient();\n  }\n\n  render() {\n    const selectedClient = this.state.selectedClient;\n    console.log(selectedClient);\n    return (\n      <React.Fragment>\n        <Title>Selected Client Account to Query</Title>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Customer ID</TableCell>\n              <TableCell>Client Account</TableCell>\n            </TableRow>\n          </TableHead>\n          {this.pickContentToDisplay()}\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default QueryAccount;\n"]},"metadata":{},"sourceType":"module"}