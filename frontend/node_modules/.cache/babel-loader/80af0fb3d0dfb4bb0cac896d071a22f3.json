{"ast":null,"code":"import _slicedToArray from\"/home/kjchan/step-react-ads/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import clsx from'clsx';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import IconButton from'@material-ui/core/IconButton';import MenuIcon from'@material-ui/icons/Menu';import NotificationsIcon from'@material-ui/icons/Notifications';import Badge from'@material-ui/core/Badge';import Typography from'@material-ui/core/Typography';import Drawer from'@material-ui/core/Drawer';import List from'@material-ui/core/List';import Divider from'@material-ui/core/Divider';import ChevronLeftIcon from'@material-ui/icons/ChevronLeft';import{makeStyles}from'@material-ui/core/styles';import{Title}from'../Utilities/Constants';import{DrawerItems}from'./DrawerItems';import{stylesSettings}from'../Utilities/Styles';var Styles=makeStyles(stylesSettings);export default function AppBarWithDrawer(props){var classes=Styles();var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var handleDrawerOpen=function handleDrawerOpen(){setOpen(true);};var handleDrawerClose=function handleDrawerClose(){setOpen(false);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AppBar,{position:\"absolute\",className:clsx(classes.appBar,open&&classes.appBarShift)},/*#__PURE__*/React.createElement(Toolbar,{className:classes.toolbar},/*#__PURE__*/React.createElement(IconButton,{edge:\"start\",color:\"inherit\",\"aria-label\":\"open drawer\",onClick:handleDrawerOpen,className:clsx(classes.menuButton,open&&classes.menuButtonHidden)},/*#__PURE__*/React.createElement(MenuIcon,null)),/*#__PURE__*/React.createElement(Typography,{component:\"h1\",variant:\"h6\",color:\"inherit\",noWrap:true,className:classes.title},Title),/*#__PURE__*/React.createElement(IconButton,{color:\"inherit\"},/*#__PURE__*/React.createElement(Badge,{badgeContent:4,color:\"secondary\"},/*#__PURE__*/React.createElement(NotificationsIcon,null))))),/*#__PURE__*/React.createElement(Drawer,{variant:\"permanent\",classes:{paper:clsx(classes.drawerPaper,!open&&classes.drawerPaperClose)},open:open},/*#__PURE__*/React.createElement(\"div\",{className:classes.toolbarIcon},/*#__PURE__*/React.createElement(IconButton,{onClick:handleDrawerClose},/*#__PURE__*/React.createElement(ChevronLeftIcon,null))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(List,null,DrawerItems)));}","map":{"version":3,"sources":["/home/kjchan/step-react-ads/client/src/Dashboard/AppBarWithDrawer/AppBarWithDrawer.js"],"names":["React","clsx","AppBar","Toolbar","IconButton","MenuIcon","NotificationsIcon","Badge","Typography","Drawer","List","Divider","ChevronLeftIcon","makeStyles","Title","DrawerItems","stylesSettings","Styles","AppBarWithDrawer","props","classes","useState","open","setOpen","handleDrawerOpen","handleDrawerClose","appBar","appBarShift","toolbar","menuButton","menuButtonHidden","title","paper","drawerPaper","drawerPaperClose","toolbarIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Title } from '../Utilities/Constants';\nimport { DrawerItems } from './DrawerItems';\n\nimport { stylesSettings } from '../Utilities/Styles';\nconst Styles = makeStyles(stylesSettings);\n\nexport default function AppBarWithDrawer(props) {\n  const classes = Styles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  return (\n    <React.Fragment>\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden,\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            {Title}\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{DrawerItems}</List>\n      </Drawer>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}