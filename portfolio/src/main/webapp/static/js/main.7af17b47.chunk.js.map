{"version":3,"sources":["serviceWorker.js","Dashboard/Utilities/Title.js","Dashboard/PageComponents/ReportsDashboard/Reports/Chart.js","Dashboard/PageComponents/ReportsDashboard/Reports/ClicksPerCampaignChart.js","Dashboard/PageComponents/ReportsDashboard/Reports/Deposits.js","Dashboard/PageComponents/ReportsDashboard/Reports/CampaignData.js","Dashboard/Utilities/Styles.js","Dashboard/PageComponents/ReportsDashboard/ReportsDashboard.js","Dashboard/PageComponents/QueryDashboard/QueryResults.js","Dashboard/PageComponents/QueryDashboard/Queries.js","Dashboard/PageComponents/QueryDashboard/QueryAccount.js","Dashboard/PageComponents/QueryDashboard/QueryDashboard.js","Dashboard/PageComponents/LoginDashboard/Login.js","Dashboard/PageComponents/LoginDashboard/Accounts.js","Dashboard/PageComponents/LoginDashboard/LoginDashboard.js","Dashboard/Utilities/Constants.js","Dashboard/AppBarWithDrawer/DrawerItems.js","Dashboard/AppBarWithDrawer/AppBarWithDrawer.js","Dashboard/PageComponents/PageRouter.js","Dashboard/Dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","Title","props","Typography","component","variant","color","gutterBottom","children","Chart","theme","useTheme","useState","data","setData","useEffect","a","time","amount","Fragment","margin","top","right","bottom","left","dataKey","stroke","palette","text","secondary","angle","position","style","textAnchor","fill","primary","type","main","dot","ClicksPerCampaignChart","axios","get","response","strokeDasharray","preventDefault","event","useStyles","makeStyles","depositContext","flex","Deposits","classes","className","Link","href","onClick","seeMore","marginTop","spacing","CampaignData","rows","setRows","post","URLSearchParams","query","headers","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","key","stylesSettings","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Styles","Reports","fixedHeightPaper","clsx","Grid","item","xs","md","xl","Paper","QueryResults","fields","console","log","Results","index","id","parseRows","i","responseObj","responseRows","length","push","parseJSON","json","SubmitButton","Button","Query","handleChange","bind","handleQuery","state","value","alert","this","params","append","request","Request","accept","method","body","fetch","then","jsonResult","setState","fieldmask","target","TextField","onChange","label","placeholder","helperText","fullWidth","InputLabelProps","shrink","React","Component","QueryAccount","getClient","selectedClient","client","loginId","customerId","Queries","LoginButton","textDecoration","Login","handleLogin","redirect","addEventListener","removeEventListener","Accounts","handleClick","selected","fetchCustomers","isSelected","customerIds","customers","role","aria-checked","tabIndex","hover","Checkbox","checked","name","LoginDash","PagesWithAttributes","route","icon","mapPageToListItem","page","ListItem","button","to","ListItemIcon","ListItemText","DrawerItems","AppBarWithDrawer","open","setOpen","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Badge","badgeContent","Drawer","Divider","List","mapPageToRouteAndComponent","exact","path","generateRoutes","PageRouter","Dashboard","CssBaseline","Container","maxWidth","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7af17b47.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n} from 'recharts';\nimport axios from 'axios';\nimport Title from '../../../Utilities/Title';\n\nexport default function Chart() {\n  const theme = useTheme();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    (async function getData() {\n      // const response = await axios.get('/data');\n      const response = {\n        data: [\n          {\n            time: '00:00',\n            amount: 0,\n          },\n          {\n            time: '03:00',\n            amount: 300,\n          },\n          {\n            time: '06:00',\n            amount: 600,\n          },\n          {\n            time: '09:00',\n            amount: 800,\n          },\n          {\n            time: '12:00',\n            amount: 1500,\n          },\n          {\n            time: '15:00',\n            amount: 2000,\n          },\n          {\n            time: '18:00',\n            amount: 2400,\n          },\n          {\n            time: '21:00',\n            amount: 2400,\n          },\n          {\n            time: '24:00',\n            amount: 'undefined',\n          },\n        ],\n      };\n      setData(response.data);\n    })();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Title>Today's Sales</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line\n            type=\"monotone\"\n            dataKey=\"amount\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport axios from 'axios';\nimport Title from '../../../Utilities/Title';\n\nexport default function ClicksPerCampaignChart() {\n  const theme = useTheme();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    (async function getData() {\n      const response = await axios.get('/data'); //fake data so there's some actual results\n\n      // only returns 1 campaign\n      // const response = await axios.post(\n      //   '/campaign',\n      //   new URLSearchParams({\n      //     query: `SELECT campaign.name, metrics.clicks FROM campaign ORDER BY campaign.id`,\n      //   }),\n      //   {\n      //     headers: {\n      //       'Content-Type': 'application/x-www-form-urlencoded',\n      //     },\n      //   },\n      // );\n\n      setData(response.data.response);\n    })();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Title>Clicks Per Campaign</Title>\n      <ResponsiveContainer>\n        <BarChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis\n            dataKey=\"campaign.name\"\n            stroke={theme.palette.text.secondary}\n          />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"metrics.clicks\" fill=\"#8884d8\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from '../../../Utilities/Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Total Ad Spend</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        as of 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View more\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../../Utilities/Title';\nimport axios from 'axios';\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function CampaignData() {\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    (async function getData() {\n      const response = await axios.post(\n        '/campaign',\n        new URLSearchParams({\n          query: `SELECT campaign.id, campaign.name, campaign.status, metrics.clicks, metrics.impressions\n      FROM campaign`,\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        },\n      );\n      setRows(response.data.response);\n    })();\n  }, []);\n  return (\n    <React.Fragment>\n      <Title>Campaign Data</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell>Clicks</TableCell>\n            <TableCell>Impressions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row['campaign.id']}>\n              <TableCell>{row['campaign.id']}</TableCell>\n              <TableCell>{row['campaign.name']}</TableCell>\n              <TableCell>{row['campaign.status']}</TableCell>\n              <TableCell>{row['metrics.clicks']}</TableCell>\n              <TableCell>{row['metrics.impressions']}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n","const drawerWidth = 240;\n\nconst stylesSettings = (theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n});\n\nexport { stylesSettings };\n","import React from 'react';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Reports/Chart';\nimport ClicksPerCampaignChart from './Reports/ClicksPerCampaignChart';\nimport Deposits from './Reports/Deposits';\nimport CampaignData from './Reports/CampaignData';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { stylesSettings } from '../../Utilities/Styles';\nconst Styles = makeStyles(stylesSettings);\n\nexport default function Reports(props) {\n  const classes = Styles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        {/* ClicksPerCampaignChart */}\n        <Grid item xs={12} md={12} xl={5}>\n          <Paper className={fixedHeightPaper}>\n            <ClicksPerCampaignChart />\n          </Paper>\n        </Grid>\n        {/* Chart */}\n        <Grid item xs={12} md={8} xl={5}>\n          <Paper className={fixedHeightPaper}>\n            <Chart />\n          </Paper>\n        </Grid>\n        {/* Recent Deposits */}\n        <Grid item xs={12} md={4} xl={2}>\n          <Paper className={fixedHeightPaper}>\n            <Deposits />\n          </Paper>\n        </Grid>\n        {/* CampaignData */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <CampaignData />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Title from '../../Utilities/Title';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport default function QueryResults(props) {\n  const rows = props.rows;\n  const fields = props.fields;\n  console.log(rows);\n  console.log(fields);\n  return (\n    <React.Fragment>\n      <Title>Query Results</Title>\n      <Results rows={rows} fields={fields} />\n    </React.Fragment>\n  );\n}\n\n// function DisplayRows(props) {\n//   const rows = props.rows;\n//   return <Results rows={rows} />;\n// }\n\nfunction Results(props) {\n  const rows = props.rows;\n  const fields = props.fields;\n  console.log(rows);\n  console.log(fields);\n  return (\n    <Table size=\"small\">\n      <TableHead>\n        <TableRow>\n          {fields.map((key, index) => (\n            <TableCell key={'col' + index}>{key}</TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map((row) => (\n          <TableRow key={'row' + row.id}>\n            {fields.map((key) => (\n              <TableCell key={key}>{row[key]}</TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport QueryResults from './QueryResults';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Title from '../../Utilities/Title';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n}));\n\n//JSON data parsing here\nfunction addKey(index, responseObj) {\n  responseObj.id = index;\n  return responseObj;\n}\n\nfunction parseRows(response) {\n  const responseRows = [];\n  let i;\n  for (i = 0; i < response.length; i++) {\n    responseRows.push(addKey(i, response[i]));\n  }\n  console.log(responseRows);\n  return responseRows;\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nclass Query extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleQuery = this.handleQuery.bind(this);\n    this.state = { value: '', rows: [], fields: [] };\n  }\n\n  handleQuery() {\n    alert('A query was submitted: ' + this.state.value);\n    const query = this.state.value;\n    const params = new URLSearchParams();\n    params.append('query', query);\n    const request = new Request('/campaign', {\n      accept: 'application/json',\n      method: 'POST',\n      body: params,\n    });\n    fetch(request)\n      .then(parseJSON)\n      .then((jsonResult) => {\n        console.log(jsonResult);\n        this.setState({\n          rows: parseRows(jsonResult.response),\n          fields: jsonResult.fieldmask,\n        });\n      });\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    // const rows = this.state.rows;\n    // const fields = this.state.fields;\n    return (\n      <React.Fragment>\n        <Title>Query Here</Title>\n        <TextField\n          value={this.state.value}\n          onChange={this.handleChange}\n          id=\"standard-full-width\"\n          label=\"Enter Query\"\n          style={{ margin: 8 }}\n          placeholder=\"Placeholder\"\n          helperText=\"helper text\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        {/* <input type=\"submit\" value=\"Submit\" /> */}\n        <SubmitButton onClick={this.handleQuery} />\n        <QueryResults rows={this.state.rows} fields={this.state.fields} />\n      </React.Fragment>\n    );\n  }\n}\n\nfunction SubmitButton(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Button variant=\"outlined\" onClick={props.onClick}>\n        Submit\n      </Button>\n    </div>\n  );\n}\n\nexport default Query;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from '../../Utilities/Title';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nclass QueryAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getClient = this.getClient.bind(this);\n    this.state = {\n      selectedClient: [],\n    };\n  }\n\n  getClient() {\n    console.log('getting clients');\n    const request = new Request('/client', {\n      accept: 'application/json',\n      method: 'GET',\n    });\n    fetch(request)\n      .then(parseJSON)\n      .then((client) => {\n        console.log(client);\n        this.setState({\n          selectedClient: client,\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.getClient();\n  }\n\n  render() {\n    const selectedClient = this.state.selectedClient;\n    console.log(selectedClient);\n    return (\n      <React.Fragment>\n        <Title>Selected Client Account to Query</Title>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Customer ID</TableCell>\n              <TableCell>Client Account</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell key={selectedClient.loginId}>\n                {selectedClient.loginId}\n              </TableCell>\n              <TableCell key={selectedClient.customerId}>\n                {selectedClient.customerId}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default QueryAccount;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Query from './Queries';\nimport QueryAccount from './QueryAccount';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { stylesSettings } from '../../Utilities/Styles';\nconst Styles = makeStyles(stylesSettings);\n\nexport default function Queries(props) {\n  const classes = Styles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        {/* Selected Account */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <QueryAccount />\n          </Paper>\n        </Grid>\n        {/* Query Card */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Query />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from '../../Utilities/Title';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.state = { redirect: '' };\n  }\n\n  handleLogin() {\n    const request = new Request('/oauth', {\n      accept: 'application/json',\n      method: 'GET',\n    });\n    fetch(request)\n      .then((request) => request.text())\n      .then((text) => {\n        console.log(text);\n        this.setState({\n          redirect: text,\n        });\n      });\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.handleLogin);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', this.handleLogin);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Title>Authenticate your Ads Account</Title>\n        <LoginButton onClick={this.state.redirect} />\n      </React.Fragment>\n    );\n  }\n}\n\nfunction LoginButton(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Button variant=\"outlined\">\n        <a\n          style={{ textDecoration: 'none' }}\n          href={props.onClick}\n          //target=\"_blank\"\n        >\n          Add Account\n        </a>\n      </Button>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from '../../Utilities/Title';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nclass Accounts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchCustomers = this.fetchCustomers.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.isSelected = this.isSelected.bind(this);\n    this.state = {\n      customerIds: [],\n      selected: '',\n    };\n  }\n\n  fetchCustomers() {\n    console.log('fetching customers');\n    const request = new Request('/customer', {\n      accept: 'application/json',\n      method: 'GET',\n    });\n    fetch(request)\n      .then(parseJSON)\n      .then((customers) => {\n        console.log(customers.response);\n        this.setState({\n          customerIds: customers.response,\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.fetchCustomers();\n  }\n\n  isSelected(id) {\n    return this.state.selected === id;\n  }\n\n  handleClick = (event, row) => {\n    this.setState({\n      selected: row.id,\n    });\n    const params = new URLSearchParams();\n    params.append('loginId', row.id);\n    params.append('customerId', row.children);\n    console.log(row.id);\n    console.log(row.children);\n    const request = new Request('/client', {\n      accept: 'application/json',\n      method: 'POST',\n      body: params,\n    });\n    fetch(request)\n      .then((request) => request.text())\n      .then((text) => {\n        alert(text);\n      });\n  };\n\n  render() {\n    const customerIds = this.state.customerIds;\n    console.log(customerIds);\n    return (\n      <React.Fragment>\n        <Title>Available Customer IDs</Title>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Select</TableCell>\n              <TableCell>Login ID</TableCell>\n              <TableCell>Client Account ID</TableCell>\n              <TableCell>Client Account Name</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {customerIds.map((row) => (\n              <TableRow\n                key={row.id}\n                onClick={(event) => this.handleClick(event, row)}\n                role=\"checkbox\"\n                aria-checked={this.isSelected(row.id)}\n                tabIndex={-1}\n                selected={this.isSelected(row.id)}\n                hover\n              >\n                <TableCell padding=\"checkbox\">\n                  <Checkbox checked={this.isSelected(row.id)} />\n                </TableCell>\n                <TableCell key={row.id}>{row.id}</TableCell>\n                <TableCell key={row.children}>{row.children}</TableCell>\n                <TableCell key={row.name}>{row.name}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Accounts;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Login from './Login';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accounts from './Accounts';\nimport { stylesSettings } from '../../Utilities/Styles';\nconst Styles = makeStyles(stylesSettings);\n\nexport default function LoginDash(props) {\n  const classes = Styles();\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        {/* Login Button */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Login />\n          </Paper>\n        </Grid>\n        {/* Available Accounts */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Accounts />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport Reports from '../PageComponents/ReportsDashboard/ReportsDashboard';\nimport Queries from '../PageComponents/QueryDashboard/QueryDashboard';\nimport Login from '../PageComponents/LoginDashboard/LoginDashboard';\n\nconst Title = 'Google Ads API Web App Demo';\nconst PagesWithAttributes = [\n  {\n    name: 'Login',\n    route: '/',\n    icon: <HomeIcon />,\n    component: <Login />,\n  },\n  {\n    name: 'Dashboard',\n    route: '/Dashboard',\n    icon: <DashboardIcon />,\n    component: <Reports />,\n  },\n  {\n    name: 'Queries',\n    route: '/Query',\n    icon: <BarChartIcon />,\n    component: <Queries />,\n  },\n];\nexport { Title, PagesWithAttributes };\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\nimport { PagesWithAttributes } from '../Utilities/Constants';\n\nconst mapPageToListItem = (page) => {\n  return (\n    <ListItem button key={page.name} component={Link} to={page.route}>\n      <ListItemIcon>{page.icon}</ListItemIcon>\n      <ListItemText primary={page.name} />\n    </ListItem>\n  );\n};\n\nconst generateListItems = () => {\n  return PagesWithAttributes.map(mapPageToListItem);\n};\n\nexport const DrawerItems = <div>{generateListItems()}</div>;\n","import React from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Title } from '../Utilities/Constants';\nimport { DrawerItems } from './DrawerItems';\n\nimport { stylesSettings } from '../Utilities/Styles';\nconst Styles = makeStyles(stylesSettings);\n\nexport default function AppBarWithDrawer(props) {\n  const classes = Styles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  return (\n    <React.Fragment>\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden,\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            {Title}\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{DrawerItems}</List>\n      </Drawer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { PagesWithAttributes } from '../Utilities/Constants';\n\nconst mapPageToRouteAndComponent = (page) => {\n  return (\n    <Route exact path={page.route}>\n      {page.component}\n    </Route>\n  );\n};\n\nconst generateRoutes = () => {\n  return PagesWithAttributes.map(mapPageToRouteAndComponent);\n};\n\nconst PageRouter = () => {\n  console.log(generateRoutes());\n  return <Switch>{generateRoutes()}</Switch>;\n};\n\nexport { PageRouter };\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport AppBarWithDrawer from './AppBarWithDrawer/AppBarWithDrawer';\nimport { BrowserRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PageRouter } from './PageComponents/PageRouter';\nimport { stylesSettings } from './Utilities/Styles';\nconst Styles = makeStyles(stylesSettings);\n\nexport default function Dashboard() {\n  const classes = Styles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <BrowserRouter>\n        <AppBarWithDrawer />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <PageRouter />\n          </Container>\n        </main>\n      </BrowserRouter>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Dashboard from './Dashboard/Dashboard';\n\nReactDOM.render(<Dashboard />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}