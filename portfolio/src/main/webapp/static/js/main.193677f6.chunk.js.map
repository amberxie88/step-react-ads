{"version":3,"sources":["serviceWorker.js","Dashboard/Utilities/Title.js","Dashboard/PageComponents/ReportsDashboard/Reports/Chart.js","Dashboard/PageComponents/ReportsDashboard/Reports/ClicksPerCampaignChart.js","Dashboard/PageComponents/ReportsDashboard/Reports/Deposits.js","Dashboard/PageComponents/ReportsDashboard/Reports/CampaignData.js","Dashboard/Utilities/Styles.js","Dashboard/PageComponents/ReportsDashboard/ReportsDashboard.js","Dashboard/PageComponents/QueryDashboard/QueryResults.js","Dashboard/PageComponents/QueryDashboard/Queries.js","Dashboard/PageComponents/QueryDashboard/QueryAccount.js","Dashboard/PageComponents/QueryDashboard/QueryDashboard.js","Dashboard/PageComponents/LoginDashboard/Login.js","Dashboard/PageComponents/LoginDashboard/Accounts.js","Dashboard/PageComponents/LoginDashboard/LoginDashboard.js","Dashboard/Utilities/Constants.js","Dashboard/AppBarWithDrawer/DrawerItems.js","Dashboard/AppBarWithDrawer/AppBarWithDrawer.js","Dashboard/PageComponents/PageRouter.js","Dashboard/Dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","Title","props","Typography","component","variant","color","gutterBottom","children","Chart","theme","useTheme","useState","data","setData","useEffect","a","time","amount","Fragment","margin","top","right","bottom","left","dataKey","stroke","palette","text","secondary","angle","position","style","textAnchor","fill","primary","type","main","dot","ClicksPerCampaignChart","axios","get","response","strokeDasharray","preventDefault","event","useStyles","makeStyles","depositContext","flex","Deposits","classes","className","Link","href","onClick","seeMore","marginTop","spacing","CampaignData","rows","setRows","post","URLSearchParams","query","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","key","stylesSettings","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Styles","Reports","fixedHeightPaper","clsx","Grid","item","xs","md","xl","Paper","QueryResults","fields","React","rowsPerPage","setRowsPerPage","page","setPage","Results","handleChangePage","newPage","handleChangeRowsPerPage","target","value","toString","charAt","length","index","slice","id","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","parseRows","i","responseObj","responseRows","push","SubmitButton","Button","Query","handleChange","bind","handleQuery","state","status","errorMessage","this","setState","meta","Error","message","fieldmask","console","log","TextField","onChange","label","placeholder","helperText","fullWidth","InputLabelProps","shrink","pickContentToDisplay","Component","QueryAccount","getClient","selectedClient","loginId","customerId","Queries","LoginButton","textDecoration","Login","handleLogin","redirect","request","Request","accept","method","fetch","then","addEventListener","removeEventListener","Accounts","fetchCustomers","handleClick","isSelected","customerIds","selected","role","aria-checked","tabIndex","hover","Checkbox","checked","name","alert","LoginDash","PagesWithAttributes","route","icon","mapPageToListItem","ListItem","button","to","ListItemIcon","ListItemText","DrawerItems","AppBarWithDrawer","open","setOpen","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Badge","badgeContent","Drawer","Divider","List","mapPageToRouteAndComponent","exact","path","generateRoutes","PageRouter","Dashboard","CssBaseline","Container","maxWidth","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.193677f6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n} from 'recharts';\nimport axios from 'axios';\nimport Title from '../../../Utilities/Title';\n\nexport default function Chart() {\n  const theme = useTheme();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    (async function getData() {\n      // const response = await axios.get('/data');\n      const response = {\n        data: [\n          {\n            time: '00:00',\n            amount: 0,\n          },\n          {\n            time: '03:00',\n            amount: 300,\n          },\n          {\n            time: '06:00',\n            amount: 600,\n          },\n          {\n            time: '09:00',\n            amount: 800,\n          },\n          {\n            time: '12:00',\n            amount: 1500,\n          },\n          {\n            time: '15:00',\n            amount: 2000,\n          },\n          {\n            time: '18:00',\n            amount: 2400,\n          },\n          {\n            time: '21:00',\n            amount: 2400,\n          },\n          {\n            time: '24:00',\n            amount: 'undefined',\n          },\n        ],\n      };\n      setData(response.data);\n    })();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Title>Today's Sales</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line\n            type=\"monotone\"\n            dataKey=\"amount\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport axios from 'axios';\nimport Title from '../../../Utilities/Title';\n\nexport default function ClicksPerCampaignChart() {\n  const theme = useTheme();\n  const [data, setData] = useState([]); //data for chart along with setter function\n\n  useEffect(() => {\n    //loads data asynchronously so page can load faster\n    (async function getData() {\n      const { data } = await axios.get('/data'); //fake data so there's some actual results\n\n      // only returns 1 campaign\n      // const response = await axios.post(\n      //   '/campaign',\n      //   new URLSearchParams({\n      //     query: `SELECT campaign.name, metrics.clicks FROM campaign ORDER BY campaign.id`,\n      //   }),\n      //   {\n      //     headers: {\n      //       'Content-Type': 'application/x-www-form-urlencoded',\n      //     },\n      //   },\n      // );\n\n      setData(data.response);\n    })();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Title>Clicks Per Campaign</Title>\n      <ResponsiveContainer>\n        <BarChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis\n            dataKey=\"campaign.name\"\n            stroke={theme.palette.text.secondary}\n          />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"metrics.clicks\" fill=\"#8884d8\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from '../../../Utilities/Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Total Ad Spend</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        as of 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View more\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../../Utilities/Title';\nimport axios from 'axios';\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function CampaignData() {\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    (async function getData() {\n      const { data } = await axios.post(\n        '/campaign',\n        new URLSearchParams({\n          query: `SELECT campaign.id, campaign.name, campaign.status, metrics.clicks, metrics.impressions FROM campaign ORDER BY campaign.id          `,\n        }),\n      );\n      setRows(data.response);\n    })();\n  }, []);\n  return (\n    <React.Fragment>\n      <Title>Campaign Data</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell>Clicks</TableCell>\n            <TableCell>Impressions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row['campaign.id']}>\n              <TableCell>{row['campaign.id']}</TableCell>\n              <TableCell>{row['campaign.name']}</TableCell>\n              <TableCell>{row['campaign.status']}</TableCell>\n              <TableCell>{row['metrics.clicks']}</TableCell>\n              <TableCell>{row['metrics.impressions']}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n","const drawerWidth = 240;\n\nconst stylesSettings = (theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n});\n\nexport { stylesSettings };\n","import React from 'react';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Reports/Chart';\nimport ClicksPerCampaignChart from './Reports/ClicksPerCampaignChart';\nimport Deposits from './Reports/Deposits';\nimport CampaignData from './Reports/CampaignData';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { stylesSettings } from '../../Utilities/Styles';\nconst Styles = makeStyles(stylesSettings);\n\nexport default function Reports(props) {\n  const classes = Styles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        {/* ClicksPerCampaignChart */}\n        <Grid item xs={12} md={12} xl={5}>\n          <Paper className={fixedHeightPaper}>\n            <ClicksPerCampaignChart />\n          </Paper>\n        </Grid>\n        {/* Chart */}\n        <Grid item xs={12} md={8} xl={5}>\n          <Paper className={fixedHeightPaper}>\n            <Chart />\n          </Paper>\n        </Grid>\n        {/* Recent Deposits */}\n        <Grid item xs={12} md={4} xl={2}>\n          <Paper className={fixedHeightPaper}>\n            <Deposits />\n          </Paper>\n        </Grid>\n        {/* CampaignData */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <CampaignData />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Title from '../../Utilities/Title';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nexport default function QueryResults(props) {\n  const { rows, fields } = props;\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [page, setPage] = React.useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    // If the selection is [A]ll the rows.\n    if (event.target.value.toString().charAt(0) == 'A') {\n      event.target.value = rows.length;\n    }\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return (\n    <React.Fragment>\n      <Title>Query Results</Title>\n      <Results\n        rows={rows}\n        fields={fields}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        handleChangePage={handleChangePage}\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </React.Fragment>\n  );\n}\n\nfunction Results(props) {\n  const rows = props.rows;\n  const fields = props.fields;\n  const rowsPerPage = props.rowsPerPage;\n  const page = props.page;\n  const handleChangePage = props.handleChangePage;\n  const handleChangeRowsPerPage = props.handleChangeRowsPerPage;\n  //console.log(rows);\n  //console.log(fields);\n  return (\n    <div>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            {fields.map((key, index) => (\n              <TableCell key={'col' + index}>{key}</TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((row) => (\n              <TableRow key={'row' + row.id}>\n                {fields.map((key) => (\n                  <TableCell key={key}>{row[key]}</TableCell>\n                ))}\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[\n          5,\n          10,\n          25,\n          'All ' + rows.length.toString() + ' Rows',\n        ]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport QueryResults from './QueryResults';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Title from '../../Utilities/Title';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n}));\n\n//JSON data parsing here\nfunction addKey(index, responseObj) {\n  responseObj.id = index;\n  return responseObj;\n}\n\nfunction parseRows(response) {\n  const responseRows = [];\n  let i;\n  for (i = 0; i < response.length; i++) {\n    responseRows.push(addKey(i, response[i]));\n  }\n  return responseRows;\n}\n\nclass Query extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleQuery = this.handleQuery.bind(this);\n    this.state = {\n      value: '',\n      rows: [],\n      fields: [],\n      rowsPerPage: 5,\n      status: 'inputRequired',\n      errorMessage: '',\n    };\n  }\n\n  async handleQuery() {\n    const query = this.state.value;\n    this.setState({ status: 'loading' });\n    try {\n      const { data } = await axios.post(\n        '/campaign',\n        new URLSearchParams({ query }),\n      );\n      if (data.meta.status !== '200') {\n        throw new Error(data.meta.message);\n      } else {\n        this.setState({\n          rows: parseRows(data.response),\n          fields: data.fieldmask,\n          status: 'loaded',\n        });\n      }\n    } catch (err) {\n      console.log(err.message);\n      this.setState({ status: 'error', errorMessage: err.message });\n    }\n  }\n\n  pickContentToDisplay() {\n    switch (this.state.status) {\n      case 'inputRequired':\n        return <Title> Enter a query to see the results </Title>;\n      case 'loading':\n        return <Title> Loading ... </Title>;\n      case 'loaded':\n        return (\n          <QueryResults\n            rows={this.state.rows}\n            fields={this.state.fields}\n            rowsPerPage={this.state.rowsPerPage}\n          />\n        );\n      case 'error':\n        return (\n          <Title>\n            {\"Something Went Wrong. Here's the Error Message: \" +\n              this.state.errorMessage}\n          </Title>\n        );\n      default:\n        return <Title> Something Went Wrong</Title>;\n    }\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    // const rows = this.state.rows;\n    // const fields = this.state.fields;\n    return (\n      <React.Fragment>\n        <Title>Query Here</Title>\n        <TextField\n          value={this.state.value}\n          onChange={this.handleChange}\n          id=\"standard-full-width\"\n          label=\"Enter Query\"\n          style={{ margin: 8 }}\n          placeholder=\"Placeholder\"\n          helperText=\"make sure to select an account!\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <SubmitButton onClick={this.handleQuery} />\n        {this.pickContentToDisplay()}\n      </React.Fragment>\n    );\n  }\n}\n\nfunction SubmitButton(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Button variant=\"outlined\" onClick={props.onClick}>\n        Submit\n      </Button>\n    </div>\n  );\n}\n\nexport default Query;\n","import React from 'react';\nimport axios from 'axios';\nimport Title from '../../Utilities/Title';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nclass QueryAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getClient = this.getClient.bind(this);\n    this.state = {\n      selectedClient: [],\n      status: 'none selected',\n    };\n  }\n\n  async getClient() {\n    this.setState({ status: 'loading' });\n    const { data } = await axios.get('/client');\n    console.log(data);\n    if (data.loginId) {\n      this.setState({\n        selectedClient: data,\n        status: 'loaded',\n      });\n    } else {\n      this.setState({ status: 'none selected' });\n    }\n  }\n\n  pickContentToDisplay() {\n    const selectedClient = this.state.selectedClient;\n    switch (this.state.status) {\n      case 'none selected':\n        return (\n          <Typography variant=\"overline\">\n            Select a client on the login page.\n          </Typography>\n        );\n      case 'loading':\n        return <Typography variant=\"overline\">Loading . . .</Typography>;\n      case 'loaded':\n        return (\n          <TableBody>\n            <TableRow>\n              <TableCell key={selectedClient.loginId}>\n                {selectedClient.loginId}\n              </TableCell>\n              <TableCell key={selectedClient.customerId}>\n                {selectedClient.customerId}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        );\n      default:\n        return (\n          <Typography variant=\"overline\">\n            Select a client on the login page.\n          </Typography>\n        );\n    }\n  }\n\n  componentDidMount() {\n    this.getClient();\n  }\n\n  render() {\n    const selectedClient = this.state.selectedClient;\n    console.log(selectedClient);\n    return (\n      <React.Fragment>\n        <Title>Selected Client Account to Query</Title>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Customer ID</TableCell>\n              <TableCell>Client Account</TableCell>\n            </TableRow>\n          </TableHead>\n          {this.pickContentToDisplay()}\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default QueryAccount;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Query from './Queries';\nimport QueryAccount from './QueryAccount';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { stylesSettings } from '../../Utilities/Styles';\nconst Styles = makeStyles(stylesSettings);\n\nexport default function Queries(props) {\n  const classes = Styles();\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        {/* Selected Account */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <QueryAccount />\n          </Paper>\n        </Grid>\n        {/* Query Card */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Query />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from '../../Utilities/Title';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.state = { redirect: '' };\n  }\n\n  handleLogin() {\n    const request = new Request('/oauth', {\n      accept: 'application/json',\n      method: 'GET',\n    });\n    fetch(request)\n      .then((request) => request.text())\n      .then((text) => {\n        console.log(text);\n        this.setState({\n          redirect: text,\n        });\n      });\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.handleLogin);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', this.handleLogin);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Title>Authenticate your Ads Account</Title>\n        <LoginButton onClick={this.state.redirect} />\n      </React.Fragment>\n    );\n  }\n}\n\nfunction LoginButton(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Button variant=\"outlined\">\n        <a\n          style={{ textDecoration: 'none' }}\n          href={props.onClick}\n          //target=\"_blank\"\n        >\n          Add Account\n        </a>\n      </Button>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport axios from 'axios';\nimport Title from '../../Utilities/Title';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass Accounts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchCustomers = this.fetchCustomers.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.isSelected = this.isSelected.bind(this);\n    this.state = {\n      customerIds: [],\n      selected: '',\n      status: 'none authenticated',\n    };\n  }\n\n  async fetchCustomers() {\n    this.setState({ status: 'loading' });\n\n    const { data } = await axios.get('/customer');\n    console.log(data.response);\n    if (data.response) {\n      this.setState({\n        customerIds: data.response,\n        status: 'loaded',\n      });\n    } else {\n      this.setState({ status: 'none authenticated' });\n    }\n  }\n\n  pickContentToDisplay() {\n    const customerIds = this.state.customerIds;\n    console.log(customerIds);\n    switch (this.state.status) {\n      case 'none authenticated':\n        return (\n          <Typography variant=\"overline\">\n            Log in to access your accounts.\n          </Typography>\n        );\n      case 'loading':\n        return <Typography variant=\"overline\">Loading . . .</Typography>;\n      case 'loaded':\n        return (\n          <TableBody>\n            {customerIds.map((row) => (\n              <TableRow\n                key={row.id}\n                onClick={(event) => this.handleClick(event, row)}\n                role=\"checkbox\"\n                aria-checked={this.isSelected(row.id)}\n                tabIndex={-1}\n                selected={this.isSelected(row.id)}\n                hover\n              >\n                <TableCell padding=\"checkbox\">\n                  <Checkbox checked={this.isSelected(row.id)} />\n                </TableCell>\n                <TableCell key={row.id}>{row.id}</TableCell>\n                <TableCell key={row.children}>{row.children}</TableCell>\n                <TableCell key={row.name}>{row.name}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        );\n      default:\n        return (\n          <Typography variant=\"overline\">\n            Log in to access your accounts.\n          </Typography>\n        );\n    }\n  }\n\n  componentDidMount() {\n    this.fetchCustomers();\n    this.setState({\n      selected: '',\n    });\n  }\n\n  isSelected(id) {\n    return this.state.selected === id;\n  }\n\n  async handleClick(event, row) {\n    this.setState({\n      selected: row.id,\n    });\n    const loginId = row.id;\n    const customerId = row.children;\n    console.log(row.id);\n    console.log(row.children);\n    const { data } = await axios.post(\n      '/client',\n      new URLSearchParams({ loginId, customerId }),\n    );\n    alert(data);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Title>Available Customer IDs</Title>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Select</TableCell>\n              <TableCell>Login ID</TableCell>\n              <TableCell>Client Account ID</TableCell>\n              <TableCell>Client Account Name</TableCell>\n            </TableRow>\n          </TableHead>\n          {this.pickContentToDisplay()}\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Accounts;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Login from './Login';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accounts from './Accounts';\nimport { stylesSettings } from '../../Utilities/Styles';\nconst Styles = makeStyles(stylesSettings);\n\nexport default function LoginDash(props) {\n  const classes = Styles();\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        {/* Login Button */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Login />\n          </Paper>\n        </Grid>\n        {/* Available Accounts */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Accounts />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport Reports from '../PageComponents/ReportsDashboard/ReportsDashboard';\nimport Queries from '../PageComponents/QueryDashboard/QueryDashboard';\nimport Login from '../PageComponents/LoginDashboard/LoginDashboard';\n\nconst Title = 'Google Ads API Web App Demo';\nconst PagesWithAttributes = [\n  {\n    name: 'Login',\n    route: '/',\n    icon: <HomeIcon />,\n    component: <Login />,\n  },\n  {\n    name: 'Dashboard',\n    route: '/Dashboard',\n    icon: <DashboardIcon />,\n    component: <Reports />,\n  },\n  {\n    name: 'Queries',\n    route: '/Query',\n    icon: <BarChartIcon />,\n    component: <Queries />,\n  },\n];\nexport { Title, PagesWithAttributes };\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\nimport { PagesWithAttributes } from '../Utilities/Constants';\n\nconst mapPageToListItem = (page) => {\n  return (\n    <ListItem button key={page.name} component={Link} to={page.route}>\n      <ListItemIcon>{page.icon}</ListItemIcon>\n      <ListItemText primary={page.name} />\n    </ListItem>\n  );\n};\n\nconst generateListItems = () => {\n  return PagesWithAttributes.map(mapPageToListItem);\n};\n\nexport const DrawerItems = <div>{generateListItems()}</div>;\n","import React from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Title } from '../Utilities/Constants';\nimport { DrawerItems } from './DrawerItems';\n\nimport { stylesSettings } from '../Utilities/Styles';\nconst Styles = makeStyles(stylesSettings);\n\nexport default function AppBarWithDrawer(props) {\n  const classes = Styles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  return (\n    <React.Fragment>\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden,\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            {Title}\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{DrawerItems}</List>\n      </Drawer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { PagesWithAttributes } from '../Utilities/Constants';\n\nconst mapPageToRouteAndComponent = (page) => {\n  return (\n    <Route exact path={page.route}>\n      {page.component}\n    </Route>\n  );\n};\n\nconst generateRoutes = () => {\n  return PagesWithAttributes.map(mapPageToRouteAndComponent);\n};\n\nconst PageRouter = () => {\n  console.log(generateRoutes());\n  return <Switch>{generateRoutes()}</Switch>;\n};\n\nexport { PageRouter };\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport AppBarWithDrawer from './AppBarWithDrawer/AppBarWithDrawer';\nimport { BrowserRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PageRouter } from './PageComponents/PageRouter';\nimport { stylesSettings } from './Utilities/Styles';\nconst Styles = makeStyles(stylesSettings);\n\nexport default function Dashboard() {\n  const classes = Styles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <BrowserRouter>\n        <AppBarWithDrawer />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <PageRouter />\n          </Container>\n        </main>\n      </BrowserRouter>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Dashboard from './Dashboard/Dashboard';\n\nReactDOM.render(<Dashboard />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}