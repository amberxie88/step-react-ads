{"version":3,"sources":["serviceWorker.js","Dashboard/Title.js","Dashboard/Chart.js","Dashboard/Deposits.js","Dashboard/Orders.js","Dashboard/QueryResults.js","Dashboard/Queries.js","Dashboard/Reports.js","Dashboard/ListItems.js","Dashboard/AppBarWithDrawer.js","Dashboard/Styles.js","Dashboard/Dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","amount","data","undefined","Chart","theme","useTheme","Fragment","margin","top","right","bottom","left","dataKey","stroke","palette","text","secondary","angle","position","style","textAnchor","fill","primary","type","main","dot","preventDefault","event","useStyles","makeStyles","depositContext","flex","Deposits","classes","className","Link","href","onClick","id","date","name","shipTo","paymentMethod","rows","seeMore","marginTop","spacing","Orders","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","key","QueryResults","console","log","DisplayRows","Results","adGroupName","keyword","root","parseJSON","response","json","SubmitButton","Button","Query","handleChange","bind","handleQuery","state","value","alert","this","query","params","URLSearchParams","append","request","Request","accept","method","body","fetch","then","jsonResult","results","setState","target","TextField","onChange","label","placeholder","helperText","fullWidth","InputLabelProps","shrink","React","Component","Reports","fixedHeightPaper","clsx","paper","fixedHeight","Grid","container","item","xs","Paper","md","lg","mainListItems","ListItem","button","ListItemIcon","ListItemText","secondaryListItems","ListSubheader","inset","AppBarWithDrawer","useState","open","setOpen","AppBar","appBar","appBarShift","Toolbar","toolbar","IconButton","edge","aria-label","menuButton","menuButtonHidden","noWrap","title","Badge","badgeContent","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","Divider","List","Styles","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","flexDirection","Dashboard","CssBaseline","Container","maxWidth","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"iNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uECdS,SAASC,EAAMC,GAC5B,OACE,kBAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAUC,cAAY,GACjEL,EAAMM,UCMb,SAASC,EAAWC,EAAMC,GACxB,MAAO,CAAED,OAAMC,UAGjB,IAAMC,EAAO,CACXH,EAAW,QAAS,GACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,MACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,MACpBA,EAAW,QAAS,MACpBA,EAAW,aAASI,IAGP,SAASC,IACtB,IAAMC,EAAQC,cAEd,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAChB,EAAD,cACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEW,KAAMA,EACNM,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,EACRC,KAAM,KAGR,kBAAC,IAAD,CAAOC,QAAQ,OAAOC,OAAQT,EAAMU,QAAQC,KAAKC,YACjD,kBAAC,IAAD,CAAOH,OAAQT,EAAMU,QAAQC,KAAKC,WAChC,kBAAC,IAAD,CACEC,MAAO,IACPC,SAAS,OACTC,MAAO,CAAEC,WAAY,SAAUC,KAAMjB,EAAMU,QAAQC,KAAKO,UAH1D,cAQF,kBAAC,IAAD,CACEC,KAAK,WACLX,QAAQ,SACRC,OAAQT,EAAMU,QAAQQ,QAAQE,KAC9BC,KAAK,O,sBCrDjB,SAASC,EAAeC,GACtBA,EAAMD,iBAGR,IAAME,EAAYC,YAAW,CAC3BC,eAAgB,CACdC,KAAM,KAIK,SAASC,IACtB,IAAMC,EAAUL,IAChB,OACE,kBAAC,IAAMtB,SAAP,KACE,kBAAChB,EAAD,wBACA,kBAACE,EAAA,EAAD,CAAYC,UAAU,IAAIC,QAAQ,MAAlC,aAGA,kBAACF,EAAA,EAAD,CAAYG,MAAM,gBAAgBuC,UAAWD,EAAQH,gBAArD,qBAGA,6BACE,kBAACK,EAAA,EAAD,CAAMxC,MAAM,UAAUyC,KAAK,IAAIC,QAASX,GAAxC,kB,iDCjBR,SAAS5B,EAAWwC,EAAIC,EAAMC,EAAMC,EAAQC,EAAe1C,GACzD,MAAO,CAAEsC,KAAIC,OAAMC,OAAMC,SAAQC,gBAAe1C,UAGlD,IAAM2C,EAAO,CACX7C,EACE,EACA,eACA,gBACA,aACA,2CACA,QAEFA,EACE,EACA,eACA,iBACA,aACA,2CACA,QAEFA,EACE,EACA,eACA,aACA,aACA,yCACA,QAEFA,EACE,EACA,eACA,kBACA,WACA,2CACA,QAEFA,EACE,EACA,eACA,oBACA,kBACA,2CACA,SAIJ,SAAS4B,EAAeC,GACtBA,EAAMD,iBAGR,IAAME,EAAYC,aAAW,SAACzB,GAAD,MAAY,CACvCwC,QAAS,CACPC,UAAWzC,EAAM0C,QAAQ,QAId,SAASC,IACtB,IAAMd,EAAUL,IAChB,OACE,kBAAC,IAAMtB,SAAP,KACE,kBAAChB,EAAD,sBACA,kBAAC0D,EAAA,EAAD,CAAOC,KAAK,SACV,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,iBAGJ,kBAACC,EAAA,EAAD,KACGX,EAAKY,KAAI,SAACC,GAAD,OACR,kBAACL,EAAA,EAAD,CAAUM,IAAKD,EAAIlB,IACjB,kBAACc,EAAA,EAAD,KAAYI,EAAIjB,MAChB,kBAACa,EAAA,EAAD,KAAYI,EAAIhB,MAChB,kBAACY,EAAA,EAAD,KAAYI,EAAIf,QAChB,kBAACW,EAAA,EAAD,KAAYI,EAAId,eAChB,kBAACU,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIxD,cAKtC,yBAAKkC,UAAWD,EAAQW,SACtB,kBAACT,EAAA,EAAD,CAAMxC,MAAM,UAAUyC,KAAK,IAAIC,QAASX,GAAxC,qB,gDCxFO,SAASgC,EAAanE,GACnC,IAAMoD,EAAOpD,EAAMoD,KAEnB,OADAgB,QAAQC,IAAIjB,GAEV,kBAAC,IAAMrC,SAAP,KACE,kBAAChB,EAAD,sBACA,kBAACuE,EAAD,CAAalB,KAAMA,KAKzB,SAASkB,EAAYtE,GACnB,IAAMoD,EAAOpD,EAAMoD,KACnB,OAAO,kBAACmB,EAAD,CAASnB,KAAMA,IAGxB,SAASmB,EAAQvE,GACf,IAAMoD,EAAOpD,EAAMoD,KACnB,OACE,kBAACK,EAAA,EAAD,CAAOC,KAAK,SACV,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,sBACA,kBAACA,EAAA,EAAD,sBACA,kBAACA,EAAA,EAAD,kBAGJ,kBAACE,EAAA,EAAD,KACGX,EAAKY,KAAI,SAACC,GAAD,OACR,kBAACL,EAAA,EAAD,CAAUM,IAAKD,EAAIlB,IACjB,kBAACc,EAAA,EAAD,KAAYI,EAAIlB,IAChB,kBAACc,EAAA,EAAD,KAAYI,EAAIhB,MAChB,kBAACY,EAAA,EAAD,KAAYI,EAAIO,aAChB,kBAACX,EAAA,EAAD,KAAYI,EAAIQ,e,sBCnCtBpC,EAAYC,aAAW,SAACzB,GAAD,MAAY,CACvC6D,KAAM,CACJ1D,OAAQH,EAAM0C,QAAQ,QAa1B,SAASoB,EAAUC,GACjB,OAAOA,EAASC,OA8DlB,SAASC,EAAa9E,GACpB,IAAM0C,EAAUL,IAChB,OACE,yBAAKM,UAAWD,EAAQgC,MACtB,kBAACK,EAAA,EAAD,CAAQ5E,QAAQ,WAAW2C,QAAS9C,EAAM8C,SAA1C,WAOSkC,M,kDArEb,WAAYhF,GAAQ,IAAD,8BACjB,cAAMA,IACDiF,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,MAAQ,CAAEC,MAAO,GAAIjC,KAAM,IAJf,E,0DAOJ,IAAD,OACZkC,MAAM,0BAA4BC,KAAKH,MAAMC,OAC7C,IAAMG,EAAQD,KAAKH,MAAMC,MACnBI,EAAS,IAAIC,gBACnBD,EAAOE,OAAO,QAASH,GACvB,IAAMI,EAAU,IAAIC,QAAQ,YAAa,CACvCC,OAAQ,mBACRC,OAAQ,OACRC,KAAMP,IAERQ,MAAML,GACHM,KAAKvB,GACLuB,MAAK,SAACC,GAhCb,IAAoBC,EAiCZhC,QAAQC,IAAI8B,EAAWvB,UACvB,EAAKyB,SAAS,CACZjD,KAAM,EAnCIgD,EAmCQD,EAAWvB,SA9B9B,CAAE7B,GAJEqD,EAAQ,GAAG,eAITnD,KAHAmD,EAAQ,GAAG,iBAGL5B,YAFC4B,EAAQ,GAAG,gBAEC3B,QADhB2B,EAAQ,GAAG,2C,mCAoCdhE,GACXmD,KAAKc,SAAS,CAAEhB,MAAOjD,EAAMkE,OAAOjB,U,+BAIpC,IAAMjC,EAAOmC,KAAKH,MAAMhC,KACxB,OACE,kBAAC,IAAMrC,SAAP,KACE,kBAAChB,EAAD,mBACA,kBAACwG,EAAA,EAAD,CACElB,MAAOE,KAAKH,MAAMC,MAClBmB,SAAUjB,KAAKN,aACflC,GAAG,sBACH0D,MAAM,cACN7E,MAAO,CAAEZ,OAAQ,GACjB0F,YAAY,cACZC,WAAW,cACXC,WAAS,EACT5F,OAAO,SACP6F,gBAAiB,CACfC,QAAQ,KAIZ,kBAAChC,EAAD,CAAchC,QAASyC,KAAKJ,cAC5B,kBAAChB,EAAD,CAAcf,KAAMA,S,GArDR2D,IAAMC,WCfX,SAASC,EAAQjH,GAAQ,IAC9B0C,EAAY1C,EAAZ0C,QACFwE,EAAmBC,YAAKzE,EAAQ0E,MAAO1E,EAAQ2E,aACrD,OACE,kBAAC,IAAMtG,SAAP,KACE,kBAACuG,EAAA,EAAD,CAAMC,WAAS,EAAChE,QAAS,GAEvB,kBAAC+D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAO/E,UAAWD,EAAQ0E,OACxB,kBAAC,EAAD,QAKJ,kBAACE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAGC,GAAI,GAC5B,kBAACF,EAAA,EAAD,CAAO/E,UAAWuE,GAChB,kBAACtG,EAAD,QAIJ,kBAAC0G,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAGC,GAAI,GAC5B,kBAACF,EAAA,EAAD,CAAO/E,UAAWuE,GAChB,kBAACzE,EAAD,QAIJ,kBAAC6E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAO/E,UAAWD,EAAQ0E,OACxB,kBAAC5D,EAAD,U,kTC3BCqE,GACX,6BACE,kBAACC,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAclG,QAAQ,eAExB,kBAAC+F,GAAA,EAAD,CACEC,QAAM,EACNjF,QAAS,WACPwC,MAAM,aAGR,kBAAC0C,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAclG,QAAQ,YAExB,kBAAC+F,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAclG,QAAQ,eAExB,kBAAC+F,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAclG,QAAQ,aAExB,kBAAC+F,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAclG,QAAQ,mBAKfmG,GACX,6BACE,kBAACC,GAAA,EAAD,CAAeC,OAAK,GAApB,iBACA,kBAACN,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAclG,QAAQ,mBAExB,kBAAC+F,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAclG,QAAQ,kBAExB,kBAAC+F,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAclG,QAAQ,oBCvDb,SAASsG,GAAiBrI,GAAQ,IACvC0C,EAAY1C,EAAZ0C,QADsC,EAEtBqE,IAAMuB,UAAS,GAFO,mBAEvCC,EAFuC,KAEjCC,EAFiC,KAS9C,OACE,kBAAC,IAAMzH,SAAP,KACE,kBAAC0H,EAAA,EAAD,CACE9G,SAAS,WACTgB,UAAWwE,YAAKzE,EAAQgG,OAAQH,GAAQ7F,EAAQiG,cAEhD,kBAACC,EAAA,EAAD,CAASjG,UAAWD,EAAQmG,SAC1B,kBAACC,EAAA,EAAD,CACEC,KAAK,QACL3I,MAAM,UACN4I,aAAW,cACXlG,QAjBe,WACvB0F,GAAQ,IAiBA7F,UAAWwE,YACTzE,EAAQuG,WACRV,GAAQ7F,EAAQwG,mBAGlB,kBAAC,KAAD,OAEF,kBAACjJ,EAAA,EAAD,CACEC,UAAU,KACVC,QAAQ,KACRC,MAAM,UACN+I,QAAM,EACNxG,UAAWD,EAAQ0G,OALrB,UASA,kBAACN,EAAA,EAAD,CAAY1I,MAAM,WAChB,kBAACiJ,GAAA,EAAD,CAAOC,aAAc,EAAGlJ,MAAM,aAC5B,kBAAC,KAAD,UAKR,kBAACmJ,GAAA,EAAD,CACEpJ,QAAQ,YACRuC,QAAS,CACP0E,MAAOD,YAAKzE,EAAQ8G,aAAcjB,GAAQ7F,EAAQ+G,mBAEpDlB,KAAMA,GAEN,yBAAK5F,UAAWD,EAAQgH,aACtB,kBAACZ,EAAA,EAAD,CAAYhG,QA9CM,WACxB0F,GAAQ,KA8CA,kBAAC,KAAD,QAGJ,kBAACmB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,KAAO/B,IACP,kBAAC8B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,KAAO1B,M,uBCQA2B,GA/EAvH,aAAW,SAACzB,GAAD,MAAY,CACpC6D,KAAM,CACJoF,QAAS,QAEXjB,QAAS,CACPkB,aAAc,IAEhBL,YAAY,cACVI,QAAS,OACTE,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNrJ,EAAMsJ,OAAOtB,SAElBH,OAAQ,CACN0B,OAAQvJ,EAAMuJ,OAAOC,OAAS,EAC9BC,WAAYzJ,EAAM0J,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQ5J,EAAM0J,YAAYE,OAAOC,MACjCC,SAAU9J,EAAM0J,YAAYI,SAASC,iBAGzCjC,YAAa,CACXkC,WAxBgB,IAyBhBC,MAAM,eAAD,OAzBW,IAyBX,OACLR,WAAYzJ,EAAM0J,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQ5J,EAAM0J,YAAYE,OAAOC,MACjCC,SAAU9J,EAAM0J,YAAYI,SAASI,kBAGzC9B,WAAY,CACV+B,YAAa,IAEf9B,iBAAkB,CAChBY,QAAS,QAEXV,MAAO,CACL6B,SAAU,GAEZzB,YAAa,CACX7H,SAAU,WACVuJ,WAAY,SACZJ,MA3CgB,IA4ChBR,WAAYzJ,EAAM0J,YAAYC,OAAO,QAAS,CAC5CC,OAAQ5J,EAAM0J,YAAYE,OAAOC,MACjCC,SAAU9J,EAAM0J,YAAYI,SAASI,kBAGzCtB,iBAAiB,cACf0B,UAAW,SACXb,WAAYzJ,EAAM0J,YAAYC,OAAO,QAAS,CAC5CC,OAAQ5J,EAAM0J,YAAYE,OAAOC,MACjCC,SAAU9J,EAAM0J,YAAYI,SAASC,gBAEvCE,MAAOjK,EAAM0C,QAAQ,IACpB1C,EAAMuK,YAAYC,GAAG,MAAQ,CAC5BP,MAAOjK,EAAM0C,QAAQ,KAGzB+H,aAAczK,EAAMsJ,OAAOtB,QAC3B0C,QAAS,CACPN,SAAU,EACVO,OAAQ,QACRC,SAAU,QAEZlE,UAAW,CACTmE,WAAY7K,EAAM0C,QAAQ,GAC1BoI,cAAe9K,EAAM0C,QAAQ,IAE/B6D,MAAO,CACL8C,QAASrJ,EAAM0C,QAAQ,GACvBuG,QAAS,OACT2B,SAAU,OACVG,cAAe,UAEjBvE,YAAa,CACXmE,OAAQ,SCvEG,SAASK,KACtB,IAAMnJ,EAAUmH,KAEhB,OACE,yBAAKlH,UAAWD,EAAQgC,MACtB,kBAACoH,EAAA,EAAD,MACA,kBAACzD,GAAD,CAAkB3F,QAASA,IAC3B,0BAAMC,UAAWD,EAAQ6I,SACvB,yBAAK5I,UAAWD,EAAQ4I,eACxB,kBAACS,EAAA,EAAD,CAAWC,SAAS,KAAKrJ,UAAWD,EAAQ6E,WAC1C,kBAACN,EAAD,CAASvE,QAASA,OCZ5BuJ,IAASC,OAAO,kBAAC,GAAD,MAAeC,SAASC,eAAe,SZ6HjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrG,MAAK,SAACsG,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNvI,QAAQuI,MAAMA,EAAMC,c","file":"static/js/main.9c0707bc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n} from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line\n            type=\"monotone\"\n            dataKey=\"amount\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(\n    0,\n    '16 Mar, 2019',\n    'Elvis Presley',\n    'Tupelo, MS',\n    'VISA ⠀•••• 3719',\n    312.44,\n  ),\n  createData(\n    1,\n    '16 Mar, 2019',\n    'Paul McCartney',\n    'London, UK',\n    'VISA ⠀•••• 2574',\n    866.99,\n  ),\n  createData(\n    2,\n    '16 Mar, 2019',\n    'Tom Scholz',\n    'Boston, MA',\n    'MC ⠀•••• 1253',\n    100.81,\n  ),\n  createData(\n    3,\n    '16 Mar, 2019',\n    'Michael Jackson',\n    'Gary, IN',\n    'AMEX ⠀•••• 2000',\n    654.39,\n  ),\n  createData(\n    4,\n    '15 Mar, 2019',\n    'Bruce Springsteen',\n    'Long Branch, NJ',\n    'VISA ⠀•••• 5919',\n    212.79,\n  ),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Title from './Title';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport default function QueryResults(props) {\n  const rows = props.rows;\n  console.log(rows);\n  return (\n    <React.Fragment>\n      <Title>Query Results</Title>\n      <DisplayRows rows={rows} />\n    </React.Fragment>\n  );\n}\n\nfunction DisplayRows(props) {\n  const rows = props.rows;\n  return <Results rows={rows} />;\n}\n\nfunction Results(props) {\n  const rows = props.rows;\n  return (\n    <Table size=\"small\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Campaign ID</TableCell>\n          <TableCell>Campaign Name</TableCell>\n          <TableCell>Ad Group Name</TableCell>\n          <TableCell>Keyword</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map((row) => (\n          <TableRow key={row.id}>\n            <TableCell>{row.id}</TableCell>\n            <TableCell>{row.name}</TableCell>\n            <TableCell>{row.adGroupName}</TableCell>\n            <TableCell>{row.keyword}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport QueryResults from './QueryResults';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Title from './Title';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n}));\n\n//JSON data parsing here\nfunction createData(results) {\n  const id = results[0]['campaign.id'];\n  const name = results[0]['campaign.name'];\n  const adGroupName = results[0]['adGroup.name'];\n  const keyword = results[0]['adGroupCriterion.keyword.text'];\n  return { id, name, adGroupName, keyword };\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nclass Query extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleQuery = this.handleQuery.bind(this);\n    this.state = { value: '', rows: [] };\n  }\n\n  handleQuery() {\n    alert('A query was submitted: ' + this.state.value);\n    const query = this.state.value;\n    const params = new URLSearchParams();\n    params.append('query', query);\n    const request = new Request('/campaign', {\n      accept: 'application/json',\n      method: 'POST',\n      body: params,\n    });\n    fetch(request)\n      .then(parseJSON)\n      .then((jsonResult) => {\n        console.log(jsonResult.response);\n        this.setState({\n          rows: [createData(jsonResult.response)],\n        });\n      });\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const rows = this.state.rows;\n    return (\n      <React.Fragment>\n        <Title>Query Here</Title>\n        <TextField\n          value={this.state.value}\n          onChange={this.handleChange}\n          id=\"standard-full-width\"\n          label=\"Enter Query\"\n          style={{ margin: 8 }}\n          placeholder=\"Placeholder\"\n          helperText=\"helper text\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        {/* <input type=\"submit\" value=\"Submit\" /> */}\n        <SubmitButton onClick={this.handleQuery} />\n        <QueryResults rows={rows} />\n      </React.Fragment>\n    );\n  }\n}\n\nfunction SubmitButton(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Button variant=\"outlined\" onClick={props.onClick}>\n        Submit\n      </Button>\n    </div>\n  );\n}\n\nexport default Query;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport Deposits from './Deposits';\nimport Orders from './Orders';\nimport Query from './Queries';\nimport QueryResults from './QueryResults';\n\nexport default function Reports(props) {\n  const { classes } = props;\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        {/* Query */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Query />\n          </Paper>\n        </Grid>\n\n        {/* Chart */}\n        <Grid item xs={12} md={8} lg={9}>\n          <Paper className={fixedHeightPaper}>\n            <Chart />\n          </Paper>\n        </Grid>\n        {/* Recent Deposits */}\n        <Grid item xs={12} md={4} lg={3}>\n          <Paper className={fixedHeightPaper}>\n            <Deposits />\n          </Paper>\n        </Grid>\n        {/* Recent Orders */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Orders />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nReports.propTypes = {\n  classes: PropTypes.object,\n};\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem\n      button\n      onClick={() => {\n        alert('clicked');\n      }}\n    >\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Integrations\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems, secondaryListItems } from './ListItems';\n\nexport default function AppBarWithDrawer(props) {\n  const { classes } = props;\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  return (\n    <React.Fragment>\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden,\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            KOALAS\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n    </React.Fragment>\n  );\n}\n\nAppBarWithDrawer.propTypes = {\n  classes: PropTypes.object,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst Styles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default Styles;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Reports from './Reports';\nimport AppBarWithDrawer from './AppBarWithDrawer';\n\nimport Styles from './Styles'; //this must be the last import because it consumes the styles of all the above imports\n\nexport default function Dashboard() {\n  const classes = Styles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBarWithDrawer classes={classes} />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Reports classes={classes} />\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Dashboard from './Dashboard/Dashboard';\n\nReactDOM.render(<Dashboard />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}